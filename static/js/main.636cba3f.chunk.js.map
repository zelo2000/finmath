{"version":3,"sources":["modules/Home/Home.tsx","utils/helpers.ts","modules/Task1/СustomСredit/CustomCredit.tsx","modules/Task1/SimpleRatesForm/DifferentRates.tsx","components/PageHeader/PageHeader.tsx","modules/Task1/SimpleRatesForm/SimpleRateFormula.tsx","modules/Task1/DiscountingAndAccounting/BankAccounting.tsx","modules/Task1/SimpleRatesForm/ReinvestmentOfFunds.tsx","modules/Task1/SimpleRatesForm/RateCalulationMethods.tsx","modules/Task1/SimpleRatesChangedTime/SimpleRatesChangedTime.tsx","modules/Task1/DiscountingAndAccounting/MathematicalDiscounting.tsx","modules/Task1/Task1.tsx","modules/Task2/ComplexRatesForm/MixedMethod.tsx","modules/Task2/ComplexRatesForm/ComplexRateFormula.tsx","modules/Task2/ComplexRatesForm/NominaInterestRate.tsx","modules/Task2/DiscountingAndAccounting/BankAccounting.tsx","modules/Task2/ComplexRatesForm/EffectiveInterestRate.tsx","modules/Task2/ComplexRatesForm/NominalRatesTransition.tsx","modules/Task2/DiscountingAndAccounting/ComplexRateIncrease.tsx","modules/Task2/ComplexRatesForm/ComplexRatesChangedTime.tsx","modules/Task2/ComplexRatesForm/NominalEffectiveTransition.tsx","modules/Task2/DiscountingAndAccounting/MathematicalDiscounting.tsx","modules/Task2/DiscountingAndAccounting/BankAccountingSeveralTerms.tsx","modules/Task2/DiscountingAndAccounting/MathematicalDiscountingSeveralTerms.tsx","modules/Task2/DiscountingAndAccounting/NominalEffectiveTransitionAccounting.tsx","modules/Task2/Task2.tsx","modules/Task3/SimpleRatesForm/DurationByInterestRate.tsx","modules/Task3/SimpleRatesForm/DurationByDiscountRate.tsx","modules/Task3/SimpleRatesForm/RateByDaysDuration.tsx","modules/Task3/SimpleRatesForm/RateByYearsDuration.tsx","modules/Task3/ComplexRatesForm/YearsDurationByInterestRate.tsx","modules/Task3/ComplexRatesForm/YearsDurationByDiscountRate.tsx","modules/Task3/ComplexRatesForm/InterestRateByYearsDuration.tsx","modules/Task3/ComplexRatesForm/DiscountRateByYearsDuration.tsx","modules/Task3/Task3.tsx","modules/Task4/ConstantForceForm/FutureDepositInterestRateByForce.tsx","modules/Task4/ConstantForceForm/FutureDepositForceByInterestRate.tsx","modules/Task4/ConstantForceForm/СurrentDepositInterestRateByForce.tsx","modules/Task4/ConstantForceForm/СurrentDepositForceByInterestRate.tsx","modules/Task4/VariableForceForm/IncreaseMultiplier.tsx","modules/Task4/VariableForceForm/YearsDurationByConstantForce.tsx","modules/Task4/VariableForceForm/ConstantForceByYearsDuration.tsx","modules/Task4/VariableForceForm/YearsDurationByVariableForce.tsx","modules/Task4/VariableForceForm/VariableForceByYearsDuration.tsx","modules/Task4/Task4.tsx","modules/Task5/SimpleAndAccountingInterestRatesEquivalence/SimpleAccountingRateEqForm.tsx","modules/Task5/SimpleAndAccountingInterestRatesEquivalence/SimpleAccountingRateEqFromDays.tsx","modules/Task5/SimpleAndAccountingInterestRatesEquivalence/SimpleRateEqForm.tsx","modules/Task5/SimpleAndAccountingInterestRatesEquivalence/SimpleRateEqFormDays.tsx","modules/Task5/SimpleAndComplexInterestRatesEquivalence/SimpleComplexEqForm.tsx","modules/Task5/SimpleAndComplexInterestRatesEquivalence/ComplexSimpleEqForm.tsx","modules/Task5/SimpleAndNominalRateEquivalence/SimpleNominalEqForm.tsx","modules/Task5/SimpleAndNominalRateEquivalence/NominalAndSimpleEqForm.tsx","modules/Task5/SimpleAccountingAndComplexRatesEquivalence/AccountingComplexEq.tsx","modules/Task5/SimpleAccountingAndComplexRatesEquivalence/AccountingComplexEqDays.tsx","modules/Task5/SimpleAccountingAndComplexRatesEquivalence/ComplexAccountingEq.tsx","modules/Task5/SimpleAccountingAndComplexRatesEquivalence/ComplexAccountingEqDays.tsx","modules/Task5/ComplexAccountingAndComplexRatesEquivalence/ComplexAccountingComplexEq.tsx","modules/Task5/ComplexAccountingAndComplexRatesEquivalence/ComplexComplexAccountingEqForm.tsx","modules/Task5/ComplexAndNominalRatesEquivalence/ComplexNominalEqForm.tsx","modules/Task5/ComplexAndNominalRatesEquivalence/NominalComplexEqFrom.tsx","modules/Task5/Consolidation/ConsolidatedPaymentSize.tsx","modules/Task5/Consolidation/ConsolidatedPaymentTerm.tsx","modules/Task5/Task5.tsx","modules/Task7/FundCreation/ContinuousPayments.tsx","modules/Task7/FundCreation/NotConstantPayments.tsx","modules/Task7/Amortization/AmortizationEqual.tsx","modules/Task7/Amortization/AllEqual.tsx","modules/Task7/Privileges/GrantElementForm.tsx","modules/Task7/Privileges/OneMorePrivilege.tsx","modules/Task7/Privileges/Mortgage.tsx","modules/Task7/Task7.tsx","components/Navigation/Navigation.tsx","modules/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","className","round","value","precision","precisionIndex","Math","pow","Number","EPSILON","CustomCredit","Form","useForm","form","handleChange","useCallback","_","allValues","initialLoan","rate","term","paymentCount","eventualLoan","oneTimePayment","setFieldsValue","name","onValuesChange","layout","justify","align","gutter","span","Item","label","placeholder","disabled","DifferentRates","rates","index","length","initialValues","undefined","List","fields","add","remove","map","field","fieldKey","MinusCircleOutlined","onClick","key","type","ghost","block","icon","PlusOutlined","CustomPageHeader","title","description","subTitle","SimpleRateFormula","eventualRate","BankAccounting","useState","showYear","setShowYear","daysAmount","yearDaysAmount","discount","onRadioChange","e","target","Group","onChange","defaultValue","ReinvestmentOfFunds","daysAmountInYear","RateCalulationMethods","startOfTerm","endOfTerm","method","moment","diff","isLeapYear","daysInMonth","date","valuePropName","SimpleRatesChangedTime","totalRate","rateDivider","remainder","transaction","startOf","MathematicalDiscounting","Title","Typography","TabPane","Tabs","Task1","PageHeader","defaultActiveKey","tab","level","MixedMethod","completeTerms","ComplexRateFormula","NominaInterestRate","changeAmount","incompleteTerms","eventualLoanGeneral","eventualLoanMixed","EffectiveInterestRate","calculateByNominalRate","setByCalculateNominalRate","nominalRate","result","calculatedByNominalRate","effectiveRate","calculatedByEffectiveRate","NominalRatesTransition","initialRate","initialChangeAmount","eventualChangeAmount","power","divider","ComplexRateIncrease","setCalculateByNominalRate","ComplexRatesChangedTime","noStyle","shouldUpdate","prevValues","curValues","area","sights","NominalEffectiveTransition","calculateNominalRate","setCalculateNominalRate","calculatedNominalRate","calculatedEffectiveRate","BankAccountingSeveralTerms","MathematicalDiscountingSeveralTerms","NominalEffectiveTransitionAccounting","Task2","DurationByInterestRate","futureDebt","currentDebt","interestRate","yearsDuration","daysDuration","leapYear","min","max","DurationByDiscountRate","discountRate","RateByDaysDuration","RateByYearsDuration","YearsDurationByInterestRate","futureDeposit","currentDeposit","frequency","log","initialValue","YearsDurationByDiscountRate","InterestRateByYearsDuration","DiscountRateByYearsDuration","Task3","FutureDepositInterestRateByForce","growthForce","exp","FutureDepositForceByInterestRate","СurrentDepositInterestRateByForce","СurrentDepositForceByInterestRate","IncreaseMultiplier","growthForceIncrease","increaseMultiplierLinear","increaseMultiplierExponential","YearsDurationByConstantForce","ConstantForceByYearsDuration","YearsDurationByVariableForce","VariableForceByYearsDuration","Task4","SimpleAccountingRateEqForm","handleChanges","simpleRate","simpleAccountingRate","SimpleAccountingRateEqFormDays","timeBase","SimpleRateEqForm","SimpleRateEqFormDays","SimpleComplexEqForm","ic","n","i_n","in","ComplexSimpleEqForm","SimpleNominalEqForm","j","m","NominalSimpleEqForm","AccountingComplexEqForm","i","d","AccountingComplexEqDaysForm","K","ComplexAccountingEqForm","ComplexAccountingEqDaysForm","ComplexAccountingComplexEqForm","ComplexComplexAccountingEqForm","ComplexNominalEqForm","NominalComplexEqForm","ConsolidatedPaymentSizeForm","n0","S","isComplex","SArr","split","x","nArr","S0","SnZipped","s","t","ConsolidatedPaymentTermForm","sum","Task5","ContinuousPayments","D","g","I","isCapitalized","Y","NotConstantPayments","a","R1","console","AmortizationEqual","Dt_1","Yt","AllEqual","GrantElementForm","v","L","w","W","OneMorePrivilegeForm","MortgageForm","k","Task7","Sider","Layout","Navigation","location","useLocation","trigger","collapsible","theme","mode","selectedKeys","pathname","to","Content","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.636cba3f.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\nimport \"./Home.css\";\r\n\r\nconst Home: FC = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      Проект створений:\r\n      <ul>\r\n        <li>Паславська Ярина</li>\r\n        <li>Зелінський Олександр</li>\r\n        <li>Доскач Денис</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export const round = (value: number, precision: number = 0) => {\r\n    const precisionIndex = Math.pow(10, precision);\r\n    return Math.round((value + Number.EPSILON) * precisionIndex) / precisionIndex;\r\n};\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface CustomCreditProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;    \r\n    paymentCount: number;\r\n    eventualLoan: number;\r\n    oneTimePayment: number;\r\n}\r\n\r\nconst CustomCredit: FC = () => {\r\n    const [form] = Form.useForm<CustomCreditProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: CustomCreditProps) => {\r\n        if (allValues.initialLoan && allValues.rate && allValues.term && allValues.paymentCount) {\r\n            const eventualLoan = allValues.initialLoan * (1 + allValues.term * (allValues.rate / 100));\r\n            const oneTimePayment = eventualLoan / (allValues.term * allValues.paymentCount);\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2), oneTimePayment: round(oneTimePayment, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber placeholder='100000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='rate'\r\n                            label='Відсоткова ставка (і) %'\r\n                        >\r\n                            <InputNumber placeholder='15' />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='term'\r\n                            label='Термін угоди у роках (n)'\r\n                        >\r\n                            <InputNumber placeholder='3' />\r\n                        </Form.Item>\r\n                    </Col>                    \r\n\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='paymentCount'\r\n                            label='Кількість виплат у році (m)'\r\n                        >\r\n                            <InputNumber placeholder='12' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='top'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='oneTimePayment'\r\n                            label='Величина разової виплати (R)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomCredit;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Button, Col, Form, InputNumber, Row } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface DifferentRatesProps { // completely done\r\n    initialLoan: number;\r\n    rates: { rate: number, term: number }[];\r\n    eventualLoan: number;\r\n}\r\n\r\nconst DifferentRates: FC = () => {\r\n    const [form] = Form.useForm<DifferentRatesProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: DifferentRatesProps) => {\r\n        if (allValues.initialLoan && allValues.rates) {\r\n            let eventualLoan = 1;\r\n            for (let index = 0; index < allValues.rates.length; index++) {\r\n                if (allValues.rates[index]) {\r\n                    eventualLoan += (allValues.rates[index].rate / 100) * allValues.rates[index].term;\r\n                }\r\n            }\r\n            eventualLoan *= allValues.initialLoan;\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n                initialValues={{\r\n                    rates: [{ rate: undefined, term: undefined }]\r\n                }}\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber placeholder='10 000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Form.List name='rates'>\r\n                    {(fields, { add, remove }) => (\r\n                        <>\r\n                            {fields.map(field => (\r\n                                <Row\r\n                                    justify='start'\r\n                                    align='middle'\r\n                                    gutter={[16, 0]}\r\n                                    key={field.key}\r\n                                    className='row-without-margin'\r\n                                >\r\n                                    <Col span={8}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Відсоткова ставка (і) %'\r\n                                            name={[field.name, 'rate']}\r\n                                            fieldKey={[field.fieldKey, 'rate']}\r\n                                        >\r\n                                            <InputNumber placeholder='25' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={8}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Термін угоди у роках (n)'\r\n                                            name={[field.name, 'term']}\r\n                                            fieldKey={[field.fieldKey, 'term']}\r\n                                        >\r\n                                            <InputNumber placeholder='5' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            ))}\r\n\r\n                            <Row>\r\n                                <Col span={4}>\r\n                                    <Form.Item>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            ghost\r\n                                            onClick={() => add()}\r\n                                            block\r\n                                            icon={<PlusOutlined />}\r\n                                        >\r\n                                            Додати період\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='top'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DifferentRates;\r\n","import React, { FC } from \"react\";\r\nimport { PageHeader } from \"antd\";\r\n\r\ninterface PageHeaderProps {\r\n\ttitle: string;\r\n\tdescription: string;\r\n}\r\n\r\nconst CustomPageHeader: FC<PageHeaderProps> = ({\r\n\ttitle,\r\n\tdescription,\r\n}: PageHeaderProps) => {\r\n\treturn (\r\n\t\t<PageHeader\r\n\t\t\tclassName=\"site-page-header\"\r\n\t\t\ttitle={title}\r\n\t\t\tsubTitle={description}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default CustomPageHeader;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface SimpleRateFormulaProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    eventualLoan: number;\r\n    eventualRate: number;\r\n}\r\n\r\nconst SimpleRateFormula: FC = () => {\r\n    const [form] = Form.useForm<SimpleRateFormulaProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: SimpleRateFormulaProps) => {\r\n        if (allValues.initialLoan && allValues.rate && allValues.term) {\r\n            const eventualRate = allValues.term * allValues.initialLoan * (allValues.rate / 100);\r\n            const eventualLoan = allValues.initialLoan * (1 + allValues.term * (allValues.rate / 100));\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2), eventualRate: round(eventualRate, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber placeholder='100000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='rate'\r\n                            label='Відсоткова ставка (і) %'\r\n                        >\r\n                            <InputNumber placeholder='25' />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='term'\r\n                            label='Термін угоди у періодах (n)'\r\n                        >\r\n                            <InputNumber placeholder='5' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='top'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualRate'\r\n                            label='Сума процентів за період (I)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SimpleRateFormula;\r\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport { Col, Form, InputNumber, Radio, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface BankAccountingProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    daysAmount: number;\r\n    yearDaysAmount: number;\r\n    paymentCount: number;\r\n    eventualLoan: number;\r\n    discount: number;\r\n}\r\n\r\nconst BankAccounting: FC = () => {\r\n    const [form] = Form.useForm<BankAccountingProps>();\r\n    const [showYear, setShowYear] = useState<boolean>(true);\r\n\r\n    const handleChange = useCallback((_, allValues: BankAccountingProps) => {\r\n        if (allValues.eventualLoan && allValues.rate && (allValues.term || (allValues.daysAmount && allValues.yearDaysAmount))) {\r\n            let initialLoan = 0;\r\n            if (showYear) {\r\n                initialLoan = allValues.eventualLoan * (1 - allValues.term * (allValues.rate / 100));\r\n            }\r\n            else {\r\n                initialLoan = allValues.eventualLoan * (1 - (allValues.daysAmount / allValues.yearDaysAmount) * (allValues.rate / 100));\r\n            }\r\n            const discount = allValues.eventualLoan - initialLoan;\r\n            form.setFieldsValue({ initialLoan: round(initialLoan, 2), discount: round(discount, 2) });\r\n        }\r\n    }, [form, showYear]);\r\n\r\n    const onRadioChange = useCallback((e) => {\r\n        e.target.value === 1 ? setShowYear(true) : setShowYear(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"100000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"rate\"\r\n                            label=\"Облікова ставка (d) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"15\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Radio.Group onChange={onRadioChange} defaultValue={1}>\r\n                        <Radio value={1}>Ввести кількість років</Radio>\r\n                        <Radio value={2}>Ввести кількість днів</Radio>\r\n                    </Radio.Group>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        showYear ?\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"term\"\r\n                                    label=\"Термін угоди у роках (n)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"1\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <>\r\n                                <Col span={8}>\r\n                                    <Form.Item\r\n                                        name=\"daysAmount\"\r\n                                        label=\"Кількість днів позики (t)\"\r\n                                    >\r\n                                        <InputNumber placeholder=\"360\" />\r\n                                    </Form.Item>\r\n                                </Col><Col span={8}>\r\n                                    <Form.Item\r\n                                        name=\"yearDaysAmount\"\r\n                                        label=\"Кількість днів у році (K)\"\r\n                                    >\r\n                                        <InputNumber placeholder=\"360\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </>\r\n                    }\r\n                </Row>\r\n\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"discount\"\r\n                            label=\"Дисконт (D)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BankAccounting;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Button, Col, Form, InputNumber, Row } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ReinvestmentOfFundsProps { // completely done\r\n    initialLoan: number;\r\n    rates: { rate: number, daysAmount: number, daysAmountInYear: number }[];\r\n    eventualLoan: number;\r\n}\r\n\r\nconst ReinvestmentOfFunds: FC = () => {\r\n    const [form] = Form.useForm<ReinvestmentOfFundsProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: ReinvestmentOfFundsProps) => {\r\n        if (allValues.initialLoan && allValues.rates) {\r\n            let eventualLoan = allValues.initialLoan;\r\n            for (let index = 0; index < allValues.rates.length; index++) {\r\n                if (allValues.rates[index]) {\r\n                    eventualLoan *= (1 + (allValues.rates[index].rate / 100) * (allValues.rates[index].daysAmount / allValues.rates[index].daysAmountInYear));\r\n                }\r\n            }\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n                initialValues={{\r\n                    rates: [{ rate: undefined, daysAmount: undefined, daysAmountInYear: undefined }]\r\n                }}\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber placeholder='1000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Form.List name='rates'>\r\n                    {(fields, { add, remove }) => (\r\n                        <>\r\n                            {fields.map(field => (\r\n                                <Row\r\n                                    justify='start'\r\n                                    align='middle'\r\n                                    gutter={[16, 0]}\r\n                                    key={field.key}\r\n                                    className='row-without-margin'\r\n                                >\r\n                                    <Col span={6}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Відсоткова ставка (і) %'\r\n                                            name={[field.name, 'rate']}\r\n                                            fieldKey={[field.fieldKey, 'rate']}\r\n                                        >\r\n                                            <InputNumber placeholder='25' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Кількість днів у місяці'\r\n                                            name={[field.name, 'daysAmount']}\r\n                                            fieldKey={[field.fieldKey, 'daysAmount']}\r\n                                        >\r\n                                            <InputNumber placeholder='31' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={6}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Кількість днів у році'\r\n                                            name={[field.name, 'daysAmountInYear']}\r\n                                            fieldKey={[field.fieldKey, 'daysAmountInYear']}\r\n                                        >\r\n                                            <InputNumber placeholder='366' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            ))}\r\n\r\n                            <Row>\r\n                                <Col span={4}>\r\n                                    <Form.Item>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            ghost\r\n                                            onClick={() => add()}\r\n                                            block\r\n                                            icon={<PlusOutlined />}\r\n                                        >\r\n                                            Додати період\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='top'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReinvestmentOfFunds;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Checkbox, Col, DatePicker, Form, InputNumber, Radio, Row } from 'antd';\r\n\r\nimport { round } from '../../../utils/helpers';\r\nimport moment from 'moment';\r\n\r\nexport interface SimpleRateFormulaProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    startOfTerm: Date;\r\n    endOfTerm: Date;\r\n    isLeapYear: boolean;\r\n    method: number;\r\n    daysAmount: number;\r\n    yearDaysAmount: number;\r\n    eventualLoan: number;\r\n}\r\n\r\nconst RateCalulationMethods: FC = () => {\r\n    const [form] = Form.useForm<SimpleRateFormulaProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: SimpleRateFormulaProps) => {\r\n        if (allValues.initialLoan && allValues.rate && allValues.startOfTerm && allValues.endOfTerm && allValues.method) {\r\n            let yearDaysAmount = 360;\r\n            let daysAmount = moment(allValues.endOfTerm).diff(moment(allValues.startOfTerm), 'days');\r\n            if (allValues.method === 1) {\r\n                yearDaysAmount = allValues.isLeapYear ? 366 : 365;\r\n            }\r\n            else if (allValues.method === 3) {\r\n                const startOfTerm = moment(allValues.startOfTerm);\r\n                const endOfTerm = moment(allValues.endOfTerm);\r\n                const startMonthDaysAmount = startOfTerm.daysInMonth() - startOfTerm.date();         \r\n                const monthAmount = endOfTerm.diff(moment(allValues.startOfTerm), 'months');\r\n                daysAmount = startMonthDaysAmount + (monthAmount * 30) + endOfTerm.date() - 1;\r\n            }\r\n            const eventualLoan = allValues.initialLoan * (1 + (daysAmount / yearDaysAmount) * (allValues.rate / 100));\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2), daysAmount: round(daysAmount, 2), yearDaysAmount: round(yearDaysAmount, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber placeholder='100000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='rate'\r\n                            label='Відсоткова ставка (і) %'\r\n                        >\r\n                            <InputNumber placeholder='25' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='startOfTerm'\r\n                            label='Початок угоди (дата)'\r\n                        >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='endOfTerm'\r\n                            label='Кінець угоди (дата)'\r\n                        >\r\n                            <DatePicker />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='isLeapYear'\r\n                            valuePropName='checked'\r\n                        >\r\n                            <Checkbox >Високосний рік</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Form.Item\r\n                        name='method'\r\n                        label='Метод'\r\n                    >\r\n                        <Radio.Group>\r\n                            <Radio value={1}>АСТ/АСТ</Radio>\r\n                            <Radio value={2}>АСТ/360</Radio>\r\n                            <Radio value={3}>360/360</Radio>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='top'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='daysAmount'\r\n                            label='Кількість днів позики (t)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='yearDaysAmount'\r\n                            label='Кількість днів у році (К)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RateCalulationMethods;\r\n","import React, { FC, useCallback } from 'react';\r\nimport moment from 'moment';\r\nimport { Button, Col, DatePicker, Form, InputNumber, Row } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface SimpleRatesChangedTimeProps { // completely done\r\n    totalRate: number;\r\n    daysAmountInYear: number\r\n    rates: { date: Date, transaction: number, remainder: number, term: number, rate: number }[];\r\n    eventualLoan: number;\r\n}\r\n\r\nconst SimpleRatesChangedTime: FC = () => {\r\n    const [form] = Form.useForm<SimpleRatesChangedTimeProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: SimpleRatesChangedTimeProps) => {\r\n        if (allValues.totalRate && allValues.daysAmountInYear && allValues.rates) {\r\n            const rateDivider = allValues.daysAmountInYear / allValues.totalRate;\r\n            let eventualRate = 0;\r\n            for (let index = 0; index < allValues.rates.length; index++) {\r\n                if (allValues.rates[index]) {\r\n                    if (index === 0) {\r\n                        allValues.rates[index].remainder = allValues.rates[index].transaction;\r\n                        allValues.rates[index].term = 0;\r\n                        allValues.rates[index].rate = 0;\r\n                    }\r\n                    else {\r\n                        allValues.rates[index].remainder = allValues.rates[index - 1].remainder + allValues.rates[index].transaction;\r\n                        allValues.rates[index - 1].term = moment(allValues.rates[index].date).startOf('day').diff(moment(allValues.rates[index - 1].date).startOf('day'), 'days');\r\n                        allValues.rates[index - 1].rate = allValues.rates[index - 1].remainder * allValues.rates[index - 1].term / 100;\r\n                        eventualRate += allValues.rates[index - 1].rate;\r\n                    }\r\n                }\r\n            }\r\n            const eventualLoan = eventualRate / rateDivider;\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n                initialValues={{\r\n                    rates: [{ date: undefined, transaction: undefined, remainder: undefined, term: undefined, rate: undefined }]\r\n                }}\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='totalRate'\r\n                            label='Відсоткова ставка (і) %'\r\n                        >\r\n                            <InputNumber placeholder='15' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name='daysAmountInYear'\r\n                            label='Кількість днів у році'\r\n                        >\r\n                            <InputNumber placeholder='365' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Form.List name='rates'>\r\n                    {(fields, { add, remove }) => (\r\n                        <>\r\n                            {fields.map(field => (\r\n                                <Row\r\n                                    justify='start'\r\n                                    align='middle'\r\n                                    gutter={[16, 0]}\r\n                                    key={field.key}\r\n                                    className='row-without-margin'\r\n                                >\r\n                                    <Col span={4}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Дата'\r\n                                            name={[field.name, 'date']}\r\n                                            fieldKey={[field.fieldKey, 'date']}\r\n                                        >\r\n                                            <DatePicker />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={4}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Рух коштів'\r\n                                            name={[field.name, 'transaction']}\r\n                                            fieldKey={[field.fieldKey, 'transaction']}\r\n                                        >\r\n                                            <InputNumber placeholder='120 000' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={4}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Залишок на рахунку'\r\n                                            name={[field.name, 'remainder']}\r\n                                            fieldKey={[field.fieldKey, 'remainder']}\r\n                                        >\r\n                                            <InputNumber disabled />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={4}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Термін'\r\n                                            name={[field.name, 'term']}\r\n                                            fieldKey={[field.fieldKey, 'term']}\r\n                                        >\r\n                                            <InputNumber disabled />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col span={4}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Процентне число'\r\n                                            name={[field.name, 'rate']}\r\n                                            fieldKey={[field.fieldKey, 'rate']}\r\n                                        >\r\n                                            <InputNumber disabled />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            ))}\r\n\r\n                            <Row>\r\n                                <Col span={4}>\r\n                                    <Form.Item>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            ghost\r\n                                            onClick={() => add()}\r\n                                            block\r\n                                            icon={<PlusOutlined />}\r\n                                        >\r\n                                            Додати період\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='top'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SimpleRatesChangedTime;\r\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport { Col, Form, InputNumber, Radio, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface MathematicalDiscountingProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    daysAmount: number;\r\n    yearDaysAmount: number;\r\n    eventualLoan: number;\r\n    discount: number;\r\n}\r\n\r\nconst MathematicalDiscounting: FC = () => {\r\n    const [form] = Form.useForm<MathematicalDiscountingProps>();\r\n    const [showYear, setShowYear] = useState<boolean>(true);\r\n\r\n    const handleChange = useCallback((_, allValues: MathematicalDiscountingProps) => {\r\n        if (allValues.eventualLoan && allValues.rate && (allValues.term || (allValues.daysAmount && allValues.yearDaysAmount))) {\r\n            let initialLoan = 0;\r\n            if (showYear) {\r\n                initialLoan = allValues.eventualLoan / (1 + allValues.term * (allValues.rate / 100));\r\n            }\r\n            else {\r\n                initialLoan = allValues.eventualLoan / (1 + (allValues.daysAmount / allValues.yearDaysAmount) * (allValues.rate / 100));\r\n            }\r\n            const discount = allValues.eventualLoan - initialLoan;\r\n            form.setFieldsValue({ initialLoan: round(initialLoan, 2), discount: round(discount, 2) });\r\n        }\r\n    }, [form, showYear]);\r\n\r\n    const onRadioChange = useCallback((e) => {\r\n        e.target.value === 1 ? setShowYear(true) : setShowYear(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"100\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"rate\"\r\n                            label=\"Відсоткова ставка (і) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"20\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Radio.Group onChange={onRadioChange} defaultValue={1}>\r\n                        <Radio value={1}>Ввести кількість років</Radio>\r\n                        <Radio value={2}>Ввести кількість днів</Radio>\r\n                    </Radio.Group>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        showYear ?\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"term\"\r\n                                    label=\"Термін угоди у роках (n)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"0.2486\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <>\r\n                                <Col span={8}>\r\n                                    <Form.Item\r\n                                        name=\"daysAmount\"\r\n                                        label=\"Кількість днів позики (t)\"\r\n                                    >\r\n                                        <InputNumber placeholder=\"91\" />\r\n                                    </Form.Item>\r\n                                </Col><Col span={8}>\r\n                                    <Form.Item\r\n                                        name=\"yearDaysAmount\"\r\n                                        label=\"Кількість днів у році (K)\"\r\n                                    >\r\n                                        <InputNumber placeholder=\"366\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </>\r\n                    }\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"discount\"\r\n                            label=\"Дисконт (D)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MathematicalDiscounting;\r\n","import React, { FC } from 'react';\r\nimport { Divider, Tabs, Typography } from 'antd';\r\n\r\nimport CustomCredit from './СustomСredit/CustomCredit';\r\nimport DifferentRates from './SimpleRatesForm/DifferentRates';\r\nimport PageHeader from '../../components/PageHeader/PageHeader';\r\nimport SimpleRateFormula from './SimpleRatesForm/SimpleRateFormula';\r\nimport BankAccounting from './DiscountingAndAccounting/BankAccounting';\r\nimport ReinvestmentOfFunds from './SimpleRatesForm/ReinvestmentOfFunds';\r\nimport RateCalulationMethods from './SimpleRatesForm/RateCalulationMethods';\r\nimport SimpleRatesChangedTime from './SimpleRatesChangedTime/SimpleRatesChangedTime';\r\nimport MathematicalDiscounting from './DiscountingAndAccounting/MathematicalDiscounting';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst Task1: FC = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PageHeader title='Тема 1.' description='Прості відсотки' />\r\n\r\n\t\t\t<div className='page-content'>\r\n\t\t\t\t<Tabs defaultActiveKey='1'>\r\n\t\t\t\t\t<TabPane tab='1.1. Нарощення за простими відсотковими ставками' key='1'>\r\n\t\t\t\t\t\t<Title level={5}>Формула простих відсотків</Title>\r\n\t\t\t\t\t\t<SimpleRateFormula />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Методи нарахування простих відсотків</Title>\r\n\t\t\t\t\t\t<RateCalulationMethods />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Формула простих відсотків (різні відсоткові ставки для різних періодів)</Title>\r\n\t\t\t\t\t\t<DifferentRates />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Повторне інвестування коштів</Title>\r\n\t\t\t\t\t\t<ReinvestmentOfFunds />\r\n\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab='1.2. Нарахування простих відсотків на змінні в часі суми депозиту' key='2'>\r\n\t\t\t\t\t\t<Title level={5}>Нарахування простих відсотків на змінні в часі суми депозиту</Title>\r\n\t\t\t\t\t\t<SimpleRatesChangedTime />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab='1.3. Нарахування відсотків у користувацькому кредиті' key='3'>\r\n\t\t\t\t\t\t<CustomCredit />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab='1.4. Дисконтування та облік за простими відсотковими ставками' key='4'>\r\n\t\t\t\t\t\t<Title level={5}>Математичне дисконтування</Title>\r\n\t\t\t\t\t\t<MathematicalDiscounting />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Банківський облік</Title>\r\n\t\t\t\t\t\t<BankAccounting />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task1;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface MixedMethodProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    completeTerms: number;\r\n    daysAmount: number;\r\n    yearDaysAmount: number;\r\n    eventualLoan: number;\r\n    eventualRate: number;\r\n}\r\n\r\nconst MixedMethod: FC = () => {\r\n    const [form] = Form.useForm<MixedMethodProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: MixedMethodProps) => {\r\n        if (allValues.initialLoan && allValues.rate && (allValues.completeTerms || (allValues.daysAmount && allValues.yearDaysAmount))) {\r\n            let rate = allValues.rate / 100;\r\n            const eventualLoan = allValues.initialLoan * Math.pow((1 + rate), allValues.completeTerms) * (1 + (allValues.daysAmount / allValues.yearDaysAmount * rate));\r\n            const eventualRate = eventualLoan - allValues.initialLoan;\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2), eventualRate: round(eventualRate, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"300000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"rate\"\r\n                            label=\"Відсоткова ставка (і) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"completeTerms\"\r\n                            label=\"Термін угоди у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"daysAmount\"\r\n                            label=\"Кількість днів позики (t)\"\r\n                        >\r\n                            <InputNumber placeholder=\"155\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"yearDaysAmount\"\r\n                            label=\"Кількість днів у році (K)\"\r\n                        >\r\n                            <InputNumber placeholder=\"365\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualRate\"\r\n                            label=\"Сума процентів за період (I)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MixedMethod;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ComplexRateFormulaProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    eventualLoan: number;\r\n    eventualRate: number;\r\n}\r\n\r\nconst ComplexRateFormula: FC = () => {\r\n    const [form] = Form.useForm<ComplexRateFormulaProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: ComplexRateFormulaProps) => {\r\n        if (allValues.initialLoan && allValues.rate && allValues.term) {\r\n            const eventualLoan = allValues.initialLoan * Math.pow((1 + (allValues.rate / 100)), allValues.term);\r\n            const eventualRate = eventualLoan - allValues.initialLoan;\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2), eventualRate: round(eventualRate, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"100000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"rate\"\r\n                            label=\"Відсоткова ставка (і) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"20\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"term\"\r\n                            label=\"Термін угоди у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualRate\"\r\n                            label=\"Сума процентів за період (I)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComplexRateFormula;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface NominaInterestRateProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    completeTerms: number;    \r\n    incompleteTerms: number;\r\n    changeAmount: number;\r\n    eventualLoanMixed: number;\r\n    eventualLoanGeneral: number;\r\n}\r\n\r\nconst NominaInterestRate: FC = () => {\r\n    const [form] = Form.useForm<NominaInterestRateProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: NominaInterestRateProps) => {\r\n        if (allValues.initialLoan && allValues.rate && allValues.changeAmount && (allValues.completeTerms || allValues.incompleteTerms)) {\r\n            let rate = allValues.rate / 100 / allValues.changeAmount;\r\n            const eventualLoanGeneral = allValues.initialLoan * Math.pow((1 + rate), (allValues.completeTerms + allValues.incompleteTerms));\r\n            const eventualLoanMixed = allValues.initialLoan * Math.pow((1 + rate), allValues.completeTerms) * (1 + (allValues.incompleteTerms * rate));\r\n            form.setFieldsValue({ eventualLoanGeneral: round(eventualLoanGeneral, 2), eventualLoanMixed: round(eventualLoanMixed, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber placeholder='100000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='rate'\r\n                            label='Відсоткова ставка (і) %'\r\n                        >\r\n                            <InputNumber placeholder='22' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='completeTerms'\r\n                            label='Кількість повних періодів'\r\n                        >\r\n                            <InputNumber placeholder='10' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='incompleteTerms'\r\n                            label='Тривалість неповного періоду'\r\n                        >\r\n                            <InputNumber placeholder='0.3333' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='changeAmount'\r\n                            label='Кількість нарахувань у році (m)'\r\n                        >\r\n                            <InputNumber placeholder='4' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoanGeneral'\r\n                            label='Нарощена сума (загальний метод) (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoanMixed'\r\n                            label='Нарощена сума (змішаний метод) (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NominaInterestRate;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface BankAccountingProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    eventualLoan: number;\r\n    discount: number;\r\n}\r\n\r\nconst BankAccounting: FC = () => {\r\n    const [form] = Form.useForm<BankAccountingProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: BankAccountingProps) => {\r\n        if (allValues.eventualLoan && allValues.rate && allValues.term) {\r\n            const initialLoan = allValues.eventualLoan * Math.pow((1 - (allValues.rate / 100)), allValues.term);\r\n            const discount = allValues.eventualLoan - initialLoan;\r\n            form.setFieldsValue({ initialLoan: round(initialLoan, 2), discount: round(discount, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber placeholder='100 000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='rate'\r\n                            label='Складна облікова ставка (і) %'\r\n                        >\r\n                            <InputNumber placeholder='20' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='term'\r\n                            label='Термін угоди у роках (n)'\r\n                        >\r\n                            <InputNumber placeholder='3.5' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='discount'\r\n                            label='Дисконт (D)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BankAccounting;\r\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport { Col, Form, InputNumber, Radio, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface EffectiveInterestRateProps { // completely done\r\n    nominalRate: number;\r\n    effectiveRate: number;\r\n    term: number;\r\n    changeAmount: number;\r\n    calculatedByNominalRate: number;\r\n    calculatedByEffectiveRate: number;\r\n}\r\n\r\nconst EffectiveInterestRate: FC = () => {\r\n    const [form] = Form.useForm<EffectiveInterestRateProps>();\r\n    const [calculateByNominalRate, setByCalculateNominalRate] = useState<boolean>(true);\r\n\r\n    const handleChange = useCallback((_, allValues: EffectiveInterestRateProps) => {\r\n        if (calculateByNominalRate) {\r\n            if (allValues.changeAmount && allValues.term && allValues.nominalRate) {\r\n                let rate = allValues.nominalRate / 100;\r\n                let result = Math.pow((1 + (rate / allValues.changeAmount)), (allValues.term * allValues.changeAmount));\r\n                form.setFieldsValue({ calculatedByNominalRate: round(result, 2) });\r\n            }\r\n        }\r\n        else {\r\n            if (allValues.term && allValues.effectiveRate) {\r\n                let rate = allValues.effectiveRate / 100;\r\n                let result = Math.pow((1 + rate), (allValues.term));\r\n                form.setFieldsValue({ calculatedByEffectiveRate: round(result, 2) });\r\n            }\r\n        }\r\n    }, [form, calculateByNominalRate]);\r\n\r\n    const onRadioChange = useCallback((e) => {\r\n        e.target.value === 1 ? setByCalculateNominalRate(true) : setByCalculateNominalRate(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Radio.Group onChange={onRadioChange} defaultValue={1}>\r\n                        <Radio value={1}>Обчислити за номінальною ставкою</Radio>\r\n                        <Radio value={2}>Обчислити за ефективною ставкою</Radio>\r\n                    </Radio.Group>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"term\"\r\n                            label=\"Термін угоди у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    {\r\n                        calculateByNominalRate ?\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"changeAmount\"\r\n                                    label=\"Кількість нарахувань у році (m)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"4\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <></>\r\n                    }\r\n                </Row>\r\n\r\n\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        calculateByNominalRate ?\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"nominalRate\"\r\n                                    label=\"Номінальна ставка (%)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"15\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"effectiveRate\"\r\n                                    label=\"Ефективна ставка (%)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"15\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                    }\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        calculateByNominalRate ?\r\n\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"calculatedByNominalRate\"\r\n                                    label=\"Множник нарощення за номінальною ставкою\"\r\n                                >\r\n                                    <InputNumber disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"calculatedByEffectiveRate\"\r\n                                    label=\"Множник нарощення за ефективною ставкою (%)\"\r\n                                >\r\n                                    <InputNumber disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                    }\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EffectiveInterestRate;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface NominalRatesTransitionProps { // completely done\r\n    initialRate: number;\r\n    eventualRate: number;\r\n    initialChangeAmount: number;\r\n    eventualChangeAmount: number;\r\n}\r\n\r\nconst NominalRatesTransition: FC = () => {\r\n    const [form] = Form.useForm<NominalRatesTransitionProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: NominalRatesTransitionProps) => {\r\n        if (allValues.initialRate && allValues.initialChangeAmount && allValues.eventualChangeAmount) {\r\n            const rate = allValues.initialRate / 100;\r\n            const power = allValues.initialChangeAmount / allValues.eventualChangeAmount;\r\n            const divider = rate / allValues.initialChangeAmount;\r\n            const result = allValues.eventualChangeAmount * (Math.pow((1 + divider), (power)) - 1);\r\n            form.setFieldsValue({ eventualRate: round(result * 100, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialRate\"\r\n                            label=\"Задана номінальна ставка (j1) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialChangeAmount\"\r\n                            label=\"Кількість нарахувань в році для заданої ставки (m1)\"\r\n                        >\r\n                            <InputNumber placeholder=\"12\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualChangeAmount\"\r\n                            label=\"Кількість нарахувань в році для шуканої ставки (m2)\"\r\n                        >\r\n                            <InputNumber placeholder=\"4\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualRate\"\r\n                            label=\"Шукана ставка (m2)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NominalRatesTransition;\r\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport { Col, Form, InputNumber, Radio, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ComplexRateIncreaseProps { // completely done\r\n    initialLoan: number;\r\n    nominalRate: number;\r\n    effectiveRate: number;\r\n    term: number;\r\n    changeAmount: number;\r\n    eventualLoan: number;\r\n}\r\n\r\nconst ComplexRateIncrease: FC = () => {\r\n    const [form] = Form.useForm<ComplexRateIncreaseProps>();\r\n    const [calculateByNominalRate, setCalculateByNominalRate] = useState<boolean>(false);\r\n\r\n    const handleChange = useCallback((_, allValues: ComplexRateIncreaseProps) => {\r\n        if (allValues.initialLoan && allValues.term && ((allValues.nominalRate && allValues.changeAmount) || allValues.effectiveRate)) {\r\n            if (calculateByNominalRate) {\r\n                let rate = allValues.nominalRate / 100;\r\n                let eventualLoan = allValues.initialLoan / (Math.pow((1 - rate / allValues.term), (allValues.term * allValues.changeAmount)));\r\n                form.setFieldsValue({ eventualLoan: round(eventualLoan, 2) });\r\n            }\r\n            else {\r\n                let rate = allValues.effectiveRate / 100;\r\n                let eventualLoan = allValues.initialLoan / Math.pow((1 - rate), (allValues.term));\r\n                form.setFieldsValue({ eventualLoan: round(eventualLoan, 2) });\r\n            }\r\n        }\r\n    }, [form, calculateByNominalRate]);\r\n\r\n    const onRadioChange = useCallback((e) => {\r\n        e.target.value === 2 ? setCalculateByNominalRate(true) : setCalculateByNominalRate(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"50000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"term\"\r\n                            label=\"Термін угоди у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Radio.Group onChange={onRadioChange} defaultValue={1}>\r\n                        <Radio value={1}>Обчислити за ефективною ставкою</Radio>\r\n                        <Radio value={2}>Обчислити за номінальною ставкою</Radio>\r\n                    </Radio.Group>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        calculateByNominalRate ?\r\n                            <>\r\n                                <Col span={8}>\r\n                                    <Form.Item\r\n                                        name=\"nominalRate\"\r\n                                        label=\"Номінальна ставка (%)\"\r\n                                    >\r\n                                        <InputNumber placeholder=\"17\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={8}>\r\n                                    <Form.Item\r\n                                        name=\"changeAmount\"\r\n                                        label=\"Кількість нарахувань у році (m)\"\r\n                                    >\r\n                                        <InputNumber placeholder=\"4\" />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </>\r\n                            :\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"effectiveRate\"\r\n                                    label=\"Ефективна ставка (%)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"17\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                    }\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComplexRateIncrease;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Button, Col, Form, InputNumber, Row } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ComplexRatesChangedTimeProps { // completely done\r\n    initialLoan: number;\r\n    rates: { rate: number, term: number }[];\r\n    eventualLoan: number;\r\n}\r\n\r\nconst ComplexRatesChangedTime: FC = () => {\r\n    const [form] = Form.useForm<ComplexRatesChangedTimeProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: ComplexRatesChangedTimeProps) => {\r\n        if (allValues.initialLoan && allValues.rates) {\r\n            let eventualLoan = allValues.initialLoan;\r\n            for (let index = 0; index < allValues.rates.length; index++) {\r\n                if (allValues.rates[index]) {\r\n                    eventualLoan *= Math.pow((1 + (allValues.rates[index].rate / 100)), allValues.rates[index].term);\r\n                }\r\n            }\r\n            form.setFieldsValue({ eventualLoan: round(eventualLoan, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name='task1'\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout='vertical'\r\n                className='form-content'\r\n                initialValues={{\r\n                    rates: [{ rate: undefined, daysAmount: undefined, daysAmountInYear: undefined }]\r\n                }}\r\n            >\r\n                <Row\r\n                    justify='start'\r\n                    align='bottom'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='initialLoan'\r\n                            label='Початкова сума (P)'\r\n                        >\r\n                            <InputNumber placeholder='50000' />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Form.List name='rates'>\r\n                    {(fields, { add, remove }) => (\r\n                        <>\r\n                            {fields.map(field => (\r\n                                <Row\r\n                                    justify='start'\r\n                                    align='middle'\r\n                                    gutter={[16, 0]}\r\n                                    key={field.key}\r\n                                    className='row-without-margin'\r\n                                >\r\n                                    <Col span={6}>\r\n                                        <Form.Item\r\n                                            noStyle\r\n                                            shouldUpdate={(prevValues, curValues) =>\r\n                                                prevValues.area !== curValues.area || prevValues.sights !== curValues.sights\r\n                                            }                                            \r\n                                        >\r\n                                            {() => (\r\n                                                <Form.Item\r\n                                                    {...field}\r\n                                                    label='Відсоткова ставка (і) %'\r\n                                                    name={[field.name, 'rate']}\r\n                                                    fieldKey={[field.fieldKey, 'rate']}\r\n                                                >\r\n                                                    <InputNumber placeholder='18' />\r\n                                                </Form.Item>\r\n                                            )}\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={6}>\r\n                                        <Form.Item\r\n                                            {...field}\r\n                                            label='Тривалість періоду'\r\n                                            name={[field.name, 'term']}\r\n                                            fieldKey={[field.fieldKey, 'term']}\r\n                                        >\r\n                                            <InputNumber placeholder='2' />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            ))}\r\n\r\n                            <Row>\r\n                                <Col span={4}>\r\n                                    <Form.Item>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            ghost\r\n                                            onClick={() => add()}\r\n                                            block\r\n                                            icon={<PlusOutlined />}\r\n                                        >\r\n                                            Додати період\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </>\r\n                    )}\r\n                </Form.List>\r\n\r\n\r\n                <Row\r\n                    justify='start'\r\n                    align='top'\r\n                    gutter={[16, 0]}\r\n                    className='row-without-margin'\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name='eventualLoan'\r\n                            label='Нарощена сума (S)'\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ComplexRatesChangedTime;\r\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport { Col, Form, InputNumber, Radio, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface NominalEffectiveTransitionProps { // completely done\r\n    nominalRate: number;\r\n    effectiveRate: number;\r\n    changeAmount: number;\r\n    calculatedNominalRate: number;\r\n    calculatedEffectiveRate: number;\r\n}\r\n\r\nconst NominalEffectiveTransition: FC = () => {\r\n    const [form] = Form.useForm<NominalEffectiveTransitionProps>();\r\n    const [calculateNominalRate, setCalculateNominalRate] = useState<boolean>(false);\r\n\r\n    const handleChange = useCallback((_, allValues: NominalEffectiveTransitionProps) => {\r\n        if (allValues.changeAmount && (allValues.nominalRate || allValues.effectiveRate)) {\r\n            if (calculateNominalRate) {\r\n                let rate = allValues.effectiveRate / 100;\r\n                let result = allValues.changeAmount * (Math.pow((1 + rate), (1 / allValues.changeAmount)) - 1);\r\n                form.setFieldsValue({ calculatedNominalRate: round(result * 100, 2) });\r\n            }\r\n            else {\r\n                let rate = allValues.nominalRate / 100;\r\n                let result = Math.pow((1 + (rate / allValues.changeAmount)), (allValues.changeAmount)) - 1;\r\n                form.setFieldsValue({ calculatedEffectiveRate: round(result * 100, 2) });\r\n            }\r\n        }\r\n    }, [form, calculateNominalRate]);\r\n\r\n    const onRadioChange = useCallback((e) => {\r\n        e.target.value === 2 ? setCalculateNominalRate(true) : setCalculateNominalRate(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"changeAmount\"\r\n                            label=\"Кількість нарахувань у році (m)\"\r\n                        >\r\n                            <InputNumber placeholder=\"12\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Radio.Group onChange={onRadioChange} defaultValue={1}>\r\n                        <Radio value={1}>Обчислити ефективну ставку</Radio>\r\n                        <Radio value={2}>Обчислити номінальну ставку</Radio>\r\n                    </Radio.Group>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        calculateNominalRate ?\r\n\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"effectiveRate\"\r\n                                    label=\"Ефективна ставка (%)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"20\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"nominalRate\"\r\n                                    label=\"Номінальна ставка (%)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"20\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                    }\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        calculateNominalRate ?\r\n\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"calculatedNominalRate\"\r\n                                    label=\"Номінальна ставка (%)\"\r\n                                >\r\n                                    <InputNumber disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"calculatedEffectiveRate\"\r\n                                    label=\"Eфективна ставка (%)\"\r\n                                >\r\n                                    <InputNumber disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                    }\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NominalEffectiveTransition;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface MathematicalDiscountingProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    eventualLoan: number;\r\n    discount: number;\r\n}\r\n\r\nconst MathematicalDiscounting: FC = () => {\r\n    const [form] = Form.useForm<MathematicalDiscountingProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: MathematicalDiscountingProps) => {\r\n        if (allValues.eventualLoan && allValues.rate && allValues.term) {\r\n            const initialLoan = allValues.eventualLoan / Math.pow((1 + (allValues.rate / 100)), allValues.term);\r\n            const discount = allValues.eventualLoan - initialLoan;\r\n            form.setFieldsValue({ initialLoan: round(initialLoan, 2), discount: round(discount, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10 000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"rate\"\r\n                            label=\"Відсоткова ставка (і) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"30\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"term\"\r\n                            label=\"Термін угоди у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"discount\"\r\n                            label=\"Дисконт (D)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MathematicalDiscounting;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface BankAccountingSeveralTermsProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    changeAmount: number;\r\n    eventualLoan: number;\r\n    discount: number;\r\n}\r\n\r\nconst BankAccountingSeveralTerms: FC = () => {\r\n    const [form] = Form.useForm<BankAccountingSeveralTermsProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: BankAccountingSeveralTermsProps) => {\r\n        if (allValues.eventualLoan && allValues.rate && allValues.term && allValues.changeAmount) {\r\n            const rate = allValues.rate / 100;\r\n            const initialLoan = allValues.eventualLoan * Math.pow((1 - (rate / allValues.changeAmount)), (allValues.term * allValues.changeAmount));\r\n            const discount = allValues.eventualLoan - initialLoan;\r\n            form.setFieldsValue({ initialLoan: round(initialLoan, 2), discount: round(discount, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"100 000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"rate\"\r\n                            label=\"Номінальна річна облікова ставка (і) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"20\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"term\"\r\n                            label=\"Термін угоди у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3.5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"changeAmount\"\r\n                            label=\"Кількість нарахувань у році (m)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"discount\"\r\n                            label=\"Дисконт (D)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BankAccountingSeveralTerms;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface MathematicalDiscountingSeveralTermsProps { // completely done\r\n    initialLoan: number;\r\n    rate: number;\r\n    term: number;\r\n    changeAmount: number;\r\n    eventualLoan: number;\r\n    discount: number;\r\n}\r\n\r\nconst MathematicalDiscountingSeveralTerms: FC = () => {\r\n    const [form] = Form.useForm<MathematicalDiscountingSeveralTermsProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: MathematicalDiscountingSeveralTermsProps) => {\r\n        if (allValues.eventualLoan && allValues.rate && allValues.term && allValues.changeAmount) {\r\n            const rate = allValues.rate / 100;\r\n            const initialLoan = allValues.eventualLoan / Math.pow((1 + (rate / allValues.changeAmount)), (allValues.term * allValues.changeAmount));\r\n            const discount = allValues.eventualLoan - initialLoan;\r\n            form.setFieldsValue({ initialLoan: round(initialLoan, 2), discount: round(discount, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"eventualLoan\"\r\n                            label=\"Нарощена сума (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10 000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"rate\"\r\n                            label=\"Відсоткова ставка (і) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"30\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"term\"\r\n                            label=\"Термін угоди у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"changeAmount\"\r\n                            label=\"Кількість нарахувань у році (m)\"\r\n                        >\r\n                            <InputNumber placeholder=\"4\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"initialLoan\"\r\n                            label=\"Початкова сума (P)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"discount\"\r\n                            label=\"Дисконт (D)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MathematicalDiscountingSeveralTerms;\r\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport { Col, Form, InputNumber, Radio, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface NominalEffectiveTransitionAccountionProps { // completely done\r\n    nominalRate: number;\r\n    effectiveRate: number;\r\n    changeAmount: number;\r\n    calculatedNominalRate: number;\r\n    calculatedEffectiveRate: number;\r\n}\r\n\r\nconst NominalEffectiveTransitionAccounting: FC = () => {\r\n    const [form] = Form.useForm<NominalEffectiveTransitionAccountionProps>();\r\n    const [calculateNominalRate, setCalculateNominalRate] = useState<boolean>(false);\r\n\r\n    const handleChange = useCallback((_, allValues: NominalEffectiveTransitionAccountionProps) => {\r\n        if (allValues.changeAmount && (allValues.nominalRate || allValues.effectiveRate)) {\r\n            if (calculateNominalRate) {\r\n                let rate = allValues.effectiveRate / 100;\r\n                let result = allValues.changeAmount * (1 - Math.pow((1 - rate), (1 / allValues.changeAmount)));\r\n                form.setFieldsValue({ calculatedNominalRate: round(result * 100, 2) });\r\n            }\r\n            else {\r\n                let rate = allValues.nominalRate / 100;\r\n                let result = 1 - Math.pow((1 - (rate / allValues.changeAmount)), (allValues.changeAmount));\r\n                form.setFieldsValue({ calculatedEffectiveRate: round(result * 100, 2) });\r\n            }\r\n        }\r\n    }, [form, calculateNominalRate]);\r\n\r\n    const onRadioChange = useCallback((e) => {\r\n        e.target.value === 2 ? setCalculateNominalRate(true) : setCalculateNominalRate(false);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={8}>\r\n                        <Form.Item\r\n                            name=\"changeAmount\"\r\n                            label=\"Кількість нарахувань у році (m)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin year-select-block\"\r\n                >\r\n                    <Radio.Group onChange={onRadioChange} defaultValue={1}>\r\n                        <Radio value={1}>Обчислити ефективну ставку</Radio>\r\n                        <Radio value={2}>Обчислити номінальну ставку</Radio>\r\n                    </Radio.Group>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        calculateNominalRate ?\r\n\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"effectiveRate\"\r\n                                    label=\"Ефективна ставка (%)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"20\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"nominalRate\"\r\n                                    label=\"Номінальна ставка (%)\"\r\n                                >\r\n                                    <InputNumber placeholder=\"20\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                    }\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    {\r\n                        calculateNominalRate ?\r\n\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"calculatedNominalRate\"\r\n                                    label=\"Номінальна ставка (%)\"\r\n                                >\r\n                                    <InputNumber disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            :\r\n                            <Col span={8}>\r\n                                <Form.Item\r\n                                    name=\"calculatedEffectiveRate\"\r\n                                    label=\"Eфективна ставка (%)\"\r\n                                >\r\n                                    <InputNumber disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                    }\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NominalEffectiveTransitionAccounting;\r\n","import React, { FC } from 'react';\r\nimport { Divider, Tabs, Typography } from 'antd';\r\n\r\nimport MixedMethod from './ComplexRatesForm/MixedMethod';\r\nimport PageHeader from '../../components/PageHeader/PageHeader';\r\nimport ComplexRateFormula from './ComplexRatesForm/ComplexRateFormula';\r\nimport NominaInterestRate from './ComplexRatesForm/NominaInterestRate';\r\nimport BankAccounting from './DiscountingAndAccounting/BankAccounting';\r\nimport EffectiveInterestRate from './ComplexRatesForm/EffectiveInterestRate';\r\nimport NominalRatesTransition from './ComplexRatesForm/NominalRatesTransition';\r\nimport ComplexRateIncrease from './DiscountingAndAccounting/ComplexRateIncrease';\r\nimport ComplexRatesChangedTime from './ComplexRatesForm/ComplexRatesChangedTime';\r\nimport NominalEffectiveTransition from './ComplexRatesForm/NominalEffectiveTransition';\r\nimport MathematicalDiscounting from './DiscountingAndAccounting/MathematicalDiscounting';\r\nimport BankAccountingSeveralTerms from './DiscountingAndAccounting/BankAccountingSeveralTerms';\r\nimport MathematicalDiscountingSeveralTerms from './DiscountingAndAccounting/MathematicalDiscountingSeveralTerms';\r\nimport NominalEffectiveTransitionAccounting from './DiscountingAndAccounting/NominalEffectiveTransitionAccounting';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst Task2: FC = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PageHeader\r\n\t\t\t\ttitle='Тема 2.'\r\n\t\t\t\tdescription='Нарощення та дисконтування за складними відсотковими ставками'\r\n\t\t\t/>\r\n\r\n\t\t\t<div className='page-content'>\r\n\t\t\t\t<Tabs defaultActiveKey='1'>\r\n\t\t\t\t\t<TabPane tab='2.1. Нарощення за складними відсотковими ставками' key='1'>\r\n\t\t\t\t\t\t<Title level={5}>Формула складних відсотків (загальний метод)</Title>\r\n\t\t\t\t\t\t<ComplexRateFormula />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Формула складних відсотків (змінні з часом складні відсоткові ставки)</Title>\r\n\t\t\t\t\t\t<ComplexRatesChangedTime />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Формула складних відсотків (змішаний метод)</Title>\r\n\t\t\t\t\t\t<MixedMethod />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Номінальна ставка відсотка</Title>\r\n\t\t\t\t\t\t<NominaInterestRate />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Множники нарощення</Title>\r\n\t\t\t\t\t\t<EffectiveInterestRate />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Перехід від ефективної до номінальної відсоткової ставки і навпаки</Title>\r\n\t\t\t\t\t\t<NominalEffectiveTransition />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Перехід між номінальними ставками</Title>\r\n\t\t\t\t\t\t<NominalRatesTransition />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab='2.2. Математичне дисконтування та облік за складними ставками відсотка' key='2'>\r\n\t\t\t\t\t\t<Title level={5}>Математичне дисконтування за складною відсотковою ставкою</Title>\r\n\t\t\t\t\t\t<MathematicalDiscounting />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Математичне дисконтування за складною відсотковою ставкою (нарахування відсотків m разів на рік)</Title>\r\n\t\t\t\t\t\t<MathematicalDiscountingSeveralTerms />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Облік за складною обліковою ставкою</Title>\r\n\t\t\t\t\t\t<BankAccounting />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Облік за складною обліковою ставкою (нарахування відсотків m разів на рік)</Title>\r\n\t\t\t\t\t\t<BankAccountingSeveralTerms />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Перехід між ефективною та номінальною обліковими ставками</Title>\r\n\t\t\t\t\t\t<NominalEffectiveTransitionAccounting />\r\n\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Нарощення за складною обліковою ставкою</Title>\r\n\t\t\t\t\t\t<ComplexRateIncrease />\r\n\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task2;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Checkbox, Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface DurationByInterestRateProps {\r\n    currentDebt: number;\r\n    futureDebt: number;\r\n    interestRate: number;\r\n    leapYear: boolean;\r\n    yearsDuration: number;\r\n    daysDuration: number;\r\n}\r\n\r\nconst DurationByInterestRate: FC = () => {\r\n    const [form] = Form.useForm<DurationByInterestRateProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: DurationByInterestRateProps) => {\r\n        if (allValues.futureDebt && allValues.currentDebt && allValues.interestRate) {\r\n            const yearsDuration = ((allValues.futureDebt / allValues.currentDebt) - 1) / (allValues.interestRate / 100);\r\n            const daysDuration = yearsDuration * (allValues.leapYear ? 366 : 365);\r\n            form.setFieldsValue({ yearsDuration: round(yearsDuration, 1), daysDuration: round(daysDuration, 1) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDebt\"\r\n                            label=\"Сучасна сума боргу (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDebt\"\r\n                            label=\"Майбутня сума боргу (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"15000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item name=\"leapYear\" valuePropName=\"checked\">\r\n                            <Checkbox>Високосний рік</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"daysDuration\"\r\n                            label=\"Тривалість періоду у днях (t)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DurationByInterestRate;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface DurationByDiscountRateProps {\r\n    currentDebt: number;\r\n    futureDebt: number;\r\n    discountRate: number;\r\n    yearsDuration: number;\r\n    daysDuration: number;\r\n}\r\n\r\nconst DurationByDiscountRate: FC = () => {\r\n    const [form] = Form.useForm<DurationByDiscountRateProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: DurationByDiscountRateProps) => {\r\n        if (allValues.futureDebt && allValues.currentDebt && allValues.discountRate) {\r\n            const yearsDuration = (1 - (allValues.currentDebt / allValues.futureDebt)) / (allValues.discountRate / 100);\r\n            const daysDuration = yearsDuration * 360;\r\n            form.setFieldsValue({ yearsDuration: round(yearsDuration, 1), daysDuration: round(daysDuration, 1) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDebt\"\r\n                            label=\"Сучасна сума боргу (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDebt\"\r\n                            label=\"Майбутня сума боргу (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"15000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"discountRate\"\r\n                            label=\"Облікова ставка (d) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"daysDuration\"\r\n                            label=\"Тривалість періоду у днях (t)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DurationByDiscountRate;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Checkbox, Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface RateByDaysDurationProps {\r\n    currentDebt: number;\r\n    futureDebt: number;\r\n    discountRate: number;\r\n    leapYear: boolean,\r\n    interestRate: number;\r\n    daysDuration: number;\r\n}\r\n\r\nconst RateByDaysDuration: FC = () => {\r\n    const [form] = Form.useForm<RateByDaysDurationProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: RateByDaysDurationProps) => {\r\n        if (allValues.futureDebt && allValues.currentDebt && allValues.daysDuration) {\r\n            const interestRate = ((allValues.futureDebt / allValues.currentDebt) - 1) * (allValues.leapYear ? 366 : 365) / allValues.daysDuration;\r\n            const discountRate = (1 - (allValues.currentDebt / allValues.futureDebt)) * 360 / allValues.daysDuration;\r\n            form.setFieldsValue({ interestRate: round(interestRate * 100, 1), discountRate: round(discountRate * 100, 1) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDebt\"\r\n                            label=\"Сучасна сума боргу (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDebt\"\r\n                            label=\"Майбутня сума боргу (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"15000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"daysDuration\"\r\n                            label=\"Тривалість періоду у днях (t)\"\r\n                        >\r\n                            <InputNumber placeholder=\"365\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item name=\"leapYear\" valuePropName=\"checked\">\r\n                            <Checkbox>Високосний рік</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"discountRate\"\r\n                            label=\"Облікова ставка (d) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RateByDaysDuration;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface RateByYearsDurationProps {\r\n    currentDebt: number;\r\n    futureDebt: number;\r\n    discountRate: number;\r\n    interestRate: number;\r\n    yearsDuration: number;\r\n}\r\n\r\nconst RateByYearsDuration: FC = () => {\r\n    const [form] = Form.useForm<RateByYearsDurationProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: RateByYearsDurationProps) => {\r\n        if (allValues.futureDebt && allValues.currentDebt && allValues.yearsDuration) {\r\n            const interestRate = ((allValues.futureDebt / allValues.currentDebt) - 1) / allValues.yearsDuration;\r\n            const discountRate = (1 - (allValues.currentDebt / allValues.futureDebt)) / allValues.yearsDuration;\r\n            form.setFieldsValue({ interestRate: round(interestRate * 100, 1), discountRate: round(discountRate * 100, 1) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDebt\"\r\n                            label=\"Сучасна сума боргу (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDebt\"\r\n                            label=\"Майбутня сума боргу (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"15000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"discountRate\"\r\n                            label=\"Облікова ставка (d) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RateByYearsDuration;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface YearsDurationByInterestRateProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    interestRate: number;\r\n    frequency: number;\r\n    yearsDuration: number;\r\n}\r\n\r\nconst YearsDurationByInterestRate: FC = () => {\r\n    const [form] = Form.useForm<YearsDurationByInterestRateProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: YearsDurationByInterestRateProps) => {\r\n        if (allValues.futureDeposit && allValues.currentDeposit && allValues.interestRate && allValues.frequency) {\r\n            const interestRate = allValues.interestRate / 100;\r\n\r\n            const yearsDuration = (Math.log(allValues.futureDeposit / allValues.currentDeposit))\r\n                / (allValues.frequency * Math.log(1 + (interestRate / allValues.frequency)));\r\n\r\n            form.setFieldsValue({ yearsDuration: round(yearsDuration, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"30000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"frequency\"\r\n                            label=\"Частота нарахування відсотків\"\r\n                            initialValue={1}\r\n                        >\r\n                            <InputNumber placeholder=\"4\" min={1} max={366} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YearsDurationByInterestRate;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface YearsDurationByDiscountRateProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    discountRate: number;\r\n    frequency: number;\r\n    yearsDuration: number;\r\n}\r\n\r\nconst YearsDurationByDiscountRate: FC = () => {\r\n    const [form] = Form.useForm<YearsDurationByDiscountRateProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: YearsDurationByDiscountRateProps) => {\r\n        if (allValues.futureDeposit && allValues.currentDeposit && allValues.discountRate && allValues.frequency) {\r\n            const discountRate = allValues.discountRate / 100;\r\n\r\n            const yearsDuration = (Math.log(allValues.currentDeposit / allValues.futureDeposit))\r\n                / (allValues.frequency * Math.log(1 - (discountRate / allValues.frequency)));\r\n            form.setFieldsValue({ yearsDuration: round(yearsDuration, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"10000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"30000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"discountRate\"\r\n                            label=\"Облікова ставка (d) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"frequency\"\r\n                            label=\"Частота нарахування відсотків\"\r\n                            initialValue={1}\r\n                        >\r\n                            <InputNumber placeholder=\"4\" min={1} max={366} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YearsDurationByDiscountRate;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface InterestRateByYearsDurationProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    frequency: number;\r\n    yearsDuration: number;\r\n\r\n    interestRate: number;\r\n}\r\n\r\nconst InterestRateByYearsDuration: FC = () => {\r\n    const [form] = Form.useForm<InterestRateByYearsDurationProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: InterestRateByYearsDurationProps) => {\r\n        if (allValues.futureDeposit && allValues.currentDeposit && allValues.yearsDuration && allValues.frequency) {\r\n            const interestRate = allValues.frequency * (\r\n                Math.pow(allValues.futureDeposit / allValues.currentDeposit, 1 / (allValues.yearsDuration * allValues.frequency)) - 1\r\n            );\r\n            form.setFieldsValue({ interestRate: round(interestRate * 100, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1500\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"frequency\"\r\n                            label=\"Частота нарахування відсотків\"\r\n                            initialValue={1}\r\n                        >\r\n                            <InputNumber placeholder=\"4\" min={1} max={366} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InterestRateByYearsDuration;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface DiscountRateByYearsDurationProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    frequency: number;\r\n    yearsDuration: number;\r\n\r\n    discountRate: number;\r\n}\r\n\r\nconst DiscountRateByYearsDuration: FC = () => {\r\n    const [form] = Form.useForm<DiscountRateByYearsDurationProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: DiscountRateByYearsDurationProps) => {\r\n        if (allValues.futureDeposit && allValues.currentDeposit && allValues.yearsDuration && allValues.frequency) {\r\n\r\n            const discountRate = allValues.frequency * (\r\n                1 - Math.pow(allValues.currentDeposit / allValues.futureDeposit, 1 / (allValues.yearsDuration * allValues.frequency))\r\n            );\r\n            form.setFieldsValue({ discountRate: round(discountRate * 100, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"75\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"100\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"frequency\"\r\n                            label=\"Частота нарахування відсотків\"\r\n                            initialValue={1}\r\n                        >\r\n                            <InputNumber placeholder=\"4\" min={1} max={366} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"discountRate\"\r\n                            label=\"Облікова ставка (d) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiscountRateByYearsDuration;\r\n","import React, { FC } from \"react\";\r\nimport { Tabs, Typography } from \"antd\";\r\n\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport DurationByInterestRate from './SimpleRatesForm/DurationByInterestRate';\r\nimport DurationByDiscountRate from './SimpleRatesForm/DurationByDiscountRate';\r\nimport RateByDaysDuration from './SimpleRatesForm/RateByDaysDuration';\r\nimport RateByYearsDuration from './SimpleRatesForm/RateByYearsDuration';\r\n\r\nimport YearsDurationByInterestRate from './ComplexRatesForm/YearsDurationByInterestRate';\r\nimport YearsDurationByDiscountRate from './ComplexRatesForm/YearsDurationByDiscountRate';\r\n\r\nimport InterestRateByYearsDuration from './ComplexRatesForm/InterestRateByYearsDuration';\r\nimport DiscountRateByYearsDuration from './ComplexRatesForm/DiscountRateByYearsDuration';\r\n\r\nimport './Task3.css';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst Task3: FC = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<PageHeader\r\n\t\t\t\ttitle=\"Тема 3.\"\r\n\t\t\t\tdescription=\"Визначення інших параметрів угод із відсотковими ставками\"\r\n\t\t\t/>\r\n\r\n\t\t\t<div className=\"page-content\">\r\n\t\t\t\t<Tabs defaultActiveKey=\"1\">\r\n\t\t\t\t\t<TabPane tab=\"3.1. Визначення деяких параметрів фінансових угод з простими ставками\" key=\"1\">\r\n\t\t\t\t\t\t<Title level={5}>Тривалість періоду на основі відсоткової ставки</Title>\r\n\t\t\t\t\t\t<DurationByInterestRate />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Тривалість періоду на основі облікової ставки</Title>\r\n\t\t\t\t\t\t<DurationByDiscountRate />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Облікова та відсоткова ставка на основі тривалості періоду в роках</Title>\r\n\t\t\t\t\t\t<RateByYearsDuration />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Облікова та відсоткова ставка на основі тривалості періоду в днях</Title>\r\n\t\t\t\t\t\t<RateByDaysDuration />\r\n\t\t\t\t\t</TabPane>\r\n\r\n\t\t\t\t\t<TabPane tab=\"3.2. Визначення деяких параметрів фінансових угод з складними ставками\" key=\"2\">\r\n\t\t\t\t\t\t<Title level={5}>Тривалість періоду в роках на основі відсоткової ставки</Title>\r\n\t\t\t\t\t\t<YearsDurationByInterestRate />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Тривалість періоду в роках на основі облікової ставки</Title>\r\n\t\t\t\t\t\t<YearsDurationByDiscountRate />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Відсоткова ставка на основі тривалість періоду в роках</Title>\r\n\t\t\t\t\t\t<InterestRateByYearsDuration />\r\n\r\n\t\t\t\t\t\t<Title level={5}>Облікова ставка на основі тривалість періоду в роках</Title>\r\n\t\t\t\t\t\t<DiscountRateByYearsDuration />\r\n\t\t\t\t\t</TabPane>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task3;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface FutureDepositInterestRateByForceProps {\r\n    currentDeposit: number;\r\n    growthForce: number;\r\n    yearsDuration: number;\r\n\r\n    futureDeposit: number;\r\n    interestRate: number;\r\n}\r\n\r\nconst FutureDepositInterestRateByForce: FC = () => {\r\n    const [form] = Form.useForm<FutureDepositInterestRateByForceProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: FutureDepositInterestRateByForceProps) => {\r\n        if (allValues.growthForce && allValues.currentDeposit && allValues.yearsDuration) {\r\n            const growthForce = allValues.growthForce / 100;\r\n            const interestRate = Math.exp(growthForce) - 1;\r\n            const futureDeposit = allValues.currentDeposit * Math.exp(growthForce * allValues.yearsDuration);\r\n            form.setFieldsValue({ interestRate: round(interestRate * 100, 2), futureDeposit: round(futureDeposit, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1000000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FutureDepositInterestRateByForce;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface FutureDepositForceByInterestRateProps {\r\n    currentDeposit: number;\r\n    growthForce: number;\r\n    yearsDuration: number;\r\n\r\n    futureDeposit: number;\r\n    interestRate: number;\r\n}\r\n\r\nconst FutureDepositForceByInterestRate: FC = () => {\r\n    const [form] = Form.useForm<FutureDepositForceByInterestRateProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: FutureDepositForceByInterestRateProps) => {\r\n        if (allValues.interestRate && allValues.currentDeposit && allValues.yearsDuration) {\r\n            const interestRate = allValues.interestRate / 100;\r\n            const growthForce = Math.log(1 + interestRate);\r\n            const futureDeposit = allValues.currentDeposit * Math.exp(growthForce * allValues.yearsDuration);\r\n            form.setFieldsValue({ growthForce: round(growthForce * 100, 2), futureDeposit: round(futureDeposit, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1000000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FutureDepositForceByInterestRate;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface СurrentDepositInterestRateByForceProps {\r\n    currentDeposit: number;\r\n    growthForce: number;\r\n    yearsDuration: number;\r\n\r\n    futureDeposit: number;\r\n    interestRate: number;\r\n}\r\n\r\nconst СurrentDepositInterestRateByForce: FC = () => {\r\n    const [form] = Form.useForm<СurrentDepositInterestRateByForceProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: СurrentDepositInterestRateByForceProps) => {\r\n        if (allValues.yearsDuration && allValues.futureDeposit && allValues.growthForce) {\r\n            const growthForce = allValues.growthForce / 100;\r\n            const interestRate = Math.exp(growthForce) - 1;\r\n            const currentDeposit = allValues.futureDeposit * Math.exp(-growthForce * allValues.yearsDuration);\r\n            form.setFieldsValue({ interestRate: round(interestRate * 100, 2), currentDeposit: round(currentDeposit, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"200000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"7\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"5\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default СurrentDepositInterestRateByForce;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface СurrentDepositForceByInterestRateProps {\r\n    currentDeposit: number;\r\n    growthForce: number;\r\n    yearsDuration: number;\r\n\r\n    futureDeposit: number;\r\n    interestRate: number;\r\n}\r\n\r\nconst СurrentDepositForceByInterestRate: FC = () => {\r\n    const [form] = Form.useForm<СurrentDepositForceByInterestRateProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: СurrentDepositForceByInterestRateProps) => {\r\n        if (allValues.interestRate && allValues.futureDeposit && allValues.yearsDuration) {\r\n            const interestRate = allValues.interestRate / 100;\r\n            const growthForce = Math.log(1 + interestRate);\r\n            const currentDeposit = allValues.futureDeposit * Math.exp(-growthForce * allValues.yearsDuration);\r\n            form.setFieldsValue({ growthForce: round(growthForce * 100, 2), currentDeposit: round(currentDeposit, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"200000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"7\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"interestRate\"\r\n                            label=\"Відсоткова ставка (i) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"5\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default СurrentDepositForceByInterestRate;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface IncreaseMultiplierProps {\r\n    growthForceIncrease: number;\r\n    growthForce: number;\r\n    yearsDuration: number;\r\n\r\n    increaseMultiplierLinear: number;\r\n    increaseMultiplierExponential: number;\r\n}\r\n\r\nconst IncreaseMultiplier: FC = () => {\r\n    const [form] = Form.useForm<IncreaseMultiplierProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: IncreaseMultiplierProps) => {\r\n        if (allValues.growthForceIncrease && allValues.growthForce && allValues.yearsDuration) {\r\n            const growthForceIncrease = allValues.growthForceIncrease / 100;\r\n            const growthForce = allValues.growthForce / 100;\r\n\r\n            const increaseMultiplierLinear = Math.exp(growthForce * allValues.yearsDuration\r\n                + (growthForceIncrease * Math.pow(allValues.yearsDuration, 2) / 2));\r\n\r\n            const increaseMultiplierExponential = Math.exp((growthForce / Math.log(growthForceIncrease))\r\n                * (Math.pow(growthForceIncrease, allValues.yearsDuration) - 1));\r\n\r\n            form.setFieldsValue({ increaseMultiplierLinear: round(increaseMultiplierLinear, 3), increaseMultiplierExponential: round(increaseMultiplierExponential, 3) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForceIncrease\"\r\n                            label=\"Приріст сили росту (a) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"7\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"increaseMultiplierLinear\"\r\n                            label=\"Множник нарощення для лінійної залежності\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"increaseMultiplierExponential\"\r\n                            label=\"Множник нарощення для експонентної залежності\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IncreaseMultiplier;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface YearsDurationByConstantForceProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    growthForce: number;\r\n\r\n    yearsDuration: number;\r\n}\r\n\r\nconst YearsDurationByConstantForce: FC = () => {\r\n    const [form] = Form.useForm<YearsDurationByConstantForceProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: YearsDurationByConstantForceProps) => {\r\n        if (allValues.currentDeposit && allValues.futureDeposit && allValues.growthForce) {\r\n            const growthForce = allValues.growthForce / 100;\r\n            const yearsDuration = Math.log(allValues.futureDeposit / allValues.currentDeposit) / growthForce;\r\n            form.setFieldsValue({ yearsDuration: round(yearsDuration, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2117\" />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YearsDurationByConstantForce;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ConstantForceByYearsDurationProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    yearsDuration: number;\r\n\r\n    growthForce: number;\r\n}\r\n\r\nconst ConstantForceByYearsDuration: FC = () => {\r\n    const [form] = Form.useForm<ConstantForceByYearsDurationProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: ConstantForceByYearsDurationProps) => {\r\n        if (allValues.currentDeposit && allValues.futureDeposit && allValues.yearsDuration) {\r\n            const growthForce = Math.log(allValues.futureDeposit / allValues.currentDeposit) / allValues.yearsDuration;\r\n            form.setFieldsValue({ growthForce: round(growthForce * 100, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2117\" />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConstantForceByYearsDuration;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface YearsDurationByVariableForceProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    growthForce: number;\r\n    growthForceIncrease: number;\r\n\r\n    yearsDuration: number;\r\n}\r\n\r\nconst YearsDurationByVariableForce: FC = () => {\r\n    const [form] = Form.useForm<YearsDurationByVariableForceProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: YearsDurationByVariableForceProps) => {\r\n        if (allValues.currentDeposit && allValues.futureDeposit && allValues.growthForce && allValues.growthForceIncrease) {\r\n            const growthForce = allValues.growthForce / 100;\r\n            const yearsDuration = Math.log(1 + ((1 + Math.log(allValues.growthForceIncrease) * Math.log(allValues.futureDeposit / allValues.currentDeposit)) / growthForce)) / Math.log(allValues.growthForceIncrease);\r\n            form.setFieldsValue({ yearsDuration: round(yearsDuration, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2117\" />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"25\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForceIncrease\"\r\n                            label=\"Приріст сили росту (a) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default YearsDurationByVariableForce;","import React, { FC, useCallback } from \"react\";\r\nimport { Col, Form, InputNumber, Row } from \"antd\";\r\n\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface VariableForceByYearsDurationProps {\r\n    currentDeposit: number;\r\n    futureDeposit: number;\r\n    yearsDuration: number;\r\n    growthForceIncrease: number;\r\n\r\n    growthForce: number;\r\n}\r\n\r\nconst VariableForceByYearsDuration: FC = () => {\r\n    const [form] = Form.useForm<VariableForceByYearsDurationProps>();\r\n\r\n    const handleChange = useCallback((_, allValues: VariableForceByYearsDurationProps) => {\r\n        if (allValues.currentDeposit && allValues.futureDeposit && allValues.yearsDuration && allValues.growthForceIncrease) {\r\n            const growthForce = (Math.log(allValues.growthForceIncrease) * Math.log(allValues.futureDeposit / allValues.currentDeposit))\r\n                / (Math.pow(allValues.growthForceIncrease, allValues.yearsDuration) - 1);\r\n            form.setFieldsValue({ growthForce: round(growthForce * 100, 2) });\r\n        }\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task3\"\r\n                form={form}\r\n                onValuesChange={handleChange}\r\n                layout=\"vertical\"\r\n                className=\"form-content\"\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"currentDeposit\"\r\n                            label=\"Початкова сума депозиту (P)\"\r\n                        >\r\n                            <InputNumber placeholder=\"1000\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"futureDeposit\"\r\n                            label=\"Очікувана сума депозиту (S)\"\r\n                        >\r\n                            <InputNumber placeholder=\"2117\" />\r\n                        </Form.Item>\r\n\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"yearsDuration\"\r\n                            label=\"Тривалість періоду у роках (n)\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForceIncrease\"\r\n                            label=\"Приріст сили росту (a) %\"\r\n                        >\r\n                            <InputNumber placeholder=\"3\" min={0} max={100} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"top\"\r\n                    gutter={[16, 0]}\r\n                    className=\"row-without-margin\"\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name=\"growthForce\"\r\n                            label=\"Сила росту (δ) %\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VariableForceByYearsDuration;","import React, { FC } from \"react\";\r\nimport { Tabs, Typography } from \"antd\";\r\n\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\n\r\nimport FutureDepositInterestRateByForce from './ConstantForceForm/FutureDepositInterestRateByForce';\r\nimport FutureDepositForceByInterestRate from './ConstantForceForm/FutureDepositForceByInterestRate';\r\nimport СurrentDepositInterestRateByForce from './ConstantForceForm/СurrentDepositInterestRateByForce';\r\nimport СurrentDepositForceByInterestRate from './ConstantForceForm/СurrentDepositForceByInterestRate';\r\n\r\nimport IncreaseMultiplier from './VariableForceForm/IncreaseMultiplier';\r\nimport YearsDurationByConstantForce from './VariableForceForm/YearsDurationByConstantForce';\r\nimport ConstantForceByYearsDuration from './VariableForceForm/ConstantForceByYearsDuration';\r\nimport YearsDurationByVariableForce from './VariableForceForm/YearsDurationByVariableForce';\r\nimport VariableForceByYearsDuration from './VariableForceForm/VariableForceByYearsDuration';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\nconst Task4: FC = () => {\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        title=\"Тема 4.\"\r\n        description=\"Неперервні відсотки. Неперервне нарощення та дисконтування\"\r\n      />\r\n      <div className=\"page-content\">\r\n        <Tabs defaultActiveKey=\"1\">\r\n          <TabPane tab=\"4.1. Постійна сила росту\" key=\"1\">\r\n            <Title level={5}>Очікувана сума депозиту та відсоткова ставка на основі сили росту</Title>\r\n            <FutureDepositInterestRateByForce />\r\n\r\n            <Title level={5}>Очікувана сума депозиту та сила росту на основі відсоткової ставки</Title>\r\n            <FutureDepositForceByInterestRate />\r\n\r\n            <Title level={5}>Поточна сума депозиту та відсоткова ставка на основі сили росту</Title>\r\n            <СurrentDepositInterestRateByForce />\r\n\r\n            <Title level={5}>Поточна сума депозиту та сила росту на основі відсоткової ставки</Title>\r\n            <СurrentDepositForceByInterestRate />\r\n          </TabPane>\r\n\r\n          <TabPane tab=\"4.2. Змінна сила росту\" key=\"2\">\r\n            <Title level={5}>Множник нарощення для лінійної та експонентної залежності</Title>\r\n            <IncreaseMultiplier />\r\n\r\n            <Title level={5}>Тривалість періоду в роках для нарощення з постійною силою росту</Title>\r\n            <YearsDurationByConstantForce />\r\n\r\n            <Title level={5}>Постійна сила росту на основі тривалості періоду в роках</Title>\r\n            <ConstantForceByYearsDuration />\r\n\r\n            <Title level={5}>Тривалість періоду в роках для нарощення зі змінною силою росту та постійним темпом зростання</Title>\r\n            <YearsDurationByVariableForce />\r\n\r\n            <Title level={5}>Змінна сила росту з постійним темпом зростання на основі тривалості періоду в роках</Title>\r\n            <VariableForceByYearsDuration />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task4;\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\n\r\nexport interface SimpleAccountingRateEqFormProps {\r\n    simpleAccountingRate: number;\r\n    simpleRate: number;\r\n    term: number;\r\n}\r\n\r\nexport const SimpleAccountingRateEqForm: FC = () => {\r\n    const [form] = Form.useForm<SimpleAccountingRateEqFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: SimpleAccountingRateEqFormProps) => {\r\n        const {term, simpleRate} = allValues;\r\n        if (!term || !simpleRate) return;\r\n\r\n        const simpleAccountingRate = round(simpleRate / (1 + simpleRate * term / 100), 2)\r\n        form.setFieldsValue({simpleAccountingRate})\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleRate\"}\r\n                            label={\"Проста відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"term\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleAccountingRate\"}\r\n                            label={\"Проста облікова ставка (d)\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\n\r\nexport interface SimpleAccountingRateEqFormDaysProps {\r\n    simpleAccountingRate: number;\r\n    simpleRate: number;\r\n    term: number;\r\n    timeBase: number;\r\n}\r\n\r\nexport const SimpleAccountingRateEqFormDays: FC = () => {\r\n    const [form] = Form.useForm<SimpleAccountingRateEqFormDaysProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: SimpleAccountingRateEqFormDaysProps) => {\r\n        const {term, simpleRate, timeBase} = allValues;\r\n        if (!term || !simpleRate || !timeBase) return;\r\n\r\n        const simpleAccountingRate = round(360 * simpleRate / (timeBase + simpleRate * term / 100), 2)\r\n        form.setFieldsValue({simpleAccountingRate})\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleRate\"}\r\n                            label={\"Проста відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"term\"}\r\n                            label={\"Тривалість угоди (n) у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"timeBase\"}\r\n                            label={\"Часова база (К) у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleAccountingRate\"}\r\n                            label={\"Проста облікова ставка (d)\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\n\r\nexport interface SimpleRateEqFormProps {\r\n    simpleAccountingRate: number;\r\n    simpleRate: number;\r\n    term: number;\r\n}\r\n\r\nexport const SimpleRateEqForm: FC = () => {\r\n    const [form] = Form.useForm<SimpleRateEqFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: SimpleRateEqFormProps) => {\r\n        const {simpleAccountingRate, term} = allValues;\r\n\r\n        if (!simpleAccountingRate || !term) return;\r\n\r\n        const simpleRate = simpleAccountingRate / (1 - term * simpleAccountingRate / 100);\r\n        form.setFieldsValue({simpleRate: round(simpleRate, 2)})\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleAccountingRate\"}\r\n                            label={\"Проста облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"term\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleRate\"}\r\n                            label={\"Проста ставка відсотків (i)\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\n\r\nexport interface SimpleRateEqFormDaysProps {\r\n    simpleAccountingRate: number;\r\n    simpleRate: number;\r\n    term: number;\r\n    timeBase: number;\r\n}\r\n\r\nexport const SimpleRateEqFormDays: FC = () => {\r\n    const [form] = Form.useForm<SimpleRateEqFormDaysProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: SimpleRateEqFormDaysProps) => {\r\n        const {simpleAccountingRate, term, timeBase} = allValues;\r\n\r\n        if (!simpleAccountingRate || !term || !timeBase) return;\r\n\r\n        const simpleRate = timeBase * simpleAccountingRate / (360 - term * simpleAccountingRate / 100);\r\n        form.setFieldsValue({simpleRate: round(simpleRate, 2)})\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task1\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleAccountingRate\"}\r\n                            label={\"Проста облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"term\"}\r\n                            label={\"Тривалість угоди (n) у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"timeBase\"}\r\n                            label={\"Часова база (К) у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"simpleRate\"}\r\n                            label={\"Проста ставка відсотків (i)\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\n\r\nexport interface SimpleComplexEqFormProps {\r\n    in: number;\r\n    ic: number;\r\n    n: number;\r\n}\r\n\r\nexport const SimpleComplexEqForm: FC = () => {\r\n    const [form] = Form.useForm<SimpleComplexEqFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: SimpleComplexEqFormProps) => {\r\n        const {ic, n} = allValues;\r\n\r\n        if(!ic || !n) return;\r\n\r\n        const i_n = (Math.pow((1 + ic / 100), n) - 1) / n * 100;\r\n        form.setFieldsValue({in: round(i_n, 2)})\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"ic\"}\r\n                            label={<span>Складна відсоткова ставка (i<sub>c</sub>) %</span>}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"in\"}\r\n                            label={<span>Проста відсоткова ставка (i<sub>n</sub>) %</span>}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\n\r\nexport interface ComplexSimpleEqFormProps {\r\n    in: number;\r\n    ic: number;\r\n    n: number;\r\n}\r\n\r\nexport const ComplexSimpleEqForm: FC = () => {\r\n    const [form] = Form.useForm<ComplexSimpleEqFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ComplexSimpleEqFormProps) => {\r\n        const {n} = allValues;\r\n        const i_n = allValues.in;\r\n\r\n        if(!i_n || !n) return;\r\n\r\n        const ic = (Math.pow((1 + n*i_n/100), 1/n) - 1) * 100;\r\n        form.setFieldsValue({ic: round(ic, 2)})\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"in\"}\r\n                            label={<span>Проста відсоткова ставка (i<sub>n</sub>) %</span>}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"ic\"}\r\n                            label={<span>Складна відсоткова ставка (i<sub>c</sub>) %</span>}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface SimpleNominalEqFormProps {\r\n    j: number;\r\n    m: number;\r\n    n: number;\r\n    i_n: number;\r\n}\r\n\r\nexport const SimpleNominalEqForm: FC = () => {\r\n    const [form] = Form.useForm<SimpleNominalEqFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: SimpleNominalEqFormProps) => {\r\n        const {j, m, n} = allValues;\r\n\r\n        if(!j || !m || !n) return;\r\n\r\n        const i_n = (Math.pow((1 + j/100/m), m*n) - 1) / n * 100;\r\n        form.setFieldsValue({i_n : round(i_n, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"j\"}\r\n                            label={\"Номінальна відсоткова ставка (j) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"m\"}\r\n                            label={\"Частота нарахувань за рік (m)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i_n\"}\r\n                            label={<span>Проста відсоткова ставка (i<sub>n</sub>) %</span>}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface NominalSimpleEqProps {\r\n    j: number;\r\n    m: number;\r\n    n: number;\r\n    i_n: number;\r\n}\r\n\r\nexport const NominalSimpleEqForm: FC = () => {\r\n    const [form] = Form.useForm<NominalSimpleEqProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: NominalSimpleEqProps) => {\r\n        const {i_n, m, n} = allValues;\r\n\r\n        if(!i_n || !m || !n) return;\r\n\r\n        const j = m * (Math.pow((1 + n * i_n/100), 1/(m*n)) - 1) * 100;\r\n        form.setFieldsValue({j : round(j, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i_n\"}\r\n                            label={<span>Проста відсоткова ставка (i<sub>n</sub>) %</span>}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"m\"}\r\n                            label={\"Частота нарахувань за рік (m)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"j\"}\r\n                            label={\"Номінальна відсоткова ставка (j) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface AccountingComplexEqProps {\r\n    i: number;\r\n    n: number;\r\n    d: number;\r\n}\r\n\r\nexport const AccountingComplexEqForm: FC = () => {\r\n    const [form] = Form.useForm<AccountingComplexEqProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: AccountingComplexEqProps) => {\r\n        const {i, n} = allValues;\r\n\r\n        if(!i || !n) return;\r\n\r\n        const d = (1 - Math.pow((1 + i/100), -n))/n * 100;\r\n\r\n        form.setFieldsValue({d: round(d, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Складна відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Проста облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface AccountingComplexEqDaysProps {\r\n    i: number;\r\n    n: number;\r\n    d: number;\r\n    K: number;\r\n}\r\n\r\nexport const AccountingComplexEqDaysForm: FC = () => {\r\n    const [form] = Form.useForm<AccountingComplexEqDaysProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: AccountingComplexEqDaysProps) => {\r\n        const {i, n, K} = allValues;\r\n\r\n        if(!i || !n || !K) return;\r\n\r\n        const d = 360/n * (1 - (Math.pow(1 + i/100, -n/K))) * 100;\r\n\r\n        form.setFieldsValue({d: round(d, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Складна відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"K\"}\r\n                            label={\"Часова база (К) у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"365\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Проста облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface ComplexAccountingEqProps {\r\n    i: number;\r\n    n: number;\r\n    d: number;\r\n}\r\n\r\nexport const ComplexAccountingEqForm: FC = () => {\r\n    const [form] = Form.useForm<ComplexAccountingEqProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ComplexAccountingEqProps) => {\r\n        const {n, d} = allValues;\r\n\r\n        if(!n || !d) return;\r\n\r\n        const i = (Math.pow(1 - n * d/100, -1/n) - 1) * 100;\r\n        form.setFieldsValue({i: round(i, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Проста облікова ставка ставка (d) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у роках\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Складна відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface ComplexAccountingEqDaysProps {\r\n    i: number;\r\n    n: number;\r\n    d: number;\r\n    K: number;\r\n}\r\n\r\nexport const ComplexAccountingEqDaysForm: FC = () => {\r\n    const [form] = Form.useForm<ComplexAccountingEqDaysProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ComplexAccountingEqDaysProps) => {\r\n        const {n, d, K} = allValues;\r\n\r\n        if(!n || !d || !K) return;\r\n\r\n        const i = (Math.pow(1 - n/360 * d/100, -K/n) - 1) * 100;\r\n        form.setFieldsValue({i: round(i, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Проста облікова ставка ставка (d) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Тривалість угоди (n) у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"K\"}\r\n                            label={\"Часова база (К)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Складна відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface ComplexAccountingComplexProps {\r\n    i: number;\r\n    d: number;\r\n}\r\n\r\nexport const ComplexAccountingComplexEqForm: FC = () => {\r\n    const [form] = Form.useForm<ComplexAccountingComplexProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ComplexAccountingComplexProps) => {\r\n        const {d} = allValues;\r\n        if(!d) return;\r\n\r\n        const i = (d/100)/(1 - d/100) * 100;\r\n        form.setFieldsValue({i: round(i, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Складна облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Складна відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface ComplexComplexAccountingProps {\r\n    i: number;\r\n    d: number;\r\n}\r\n\r\nexport const ComplexComplexAccountingEqForm: FC = () => {\r\n    const [form] = Form.useForm<ComplexComplexAccountingProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ComplexComplexAccountingProps) => {\r\n        const {i} = allValues;\r\n        if(!i) return;\r\n\r\n        const d = i/(1+i/100);\r\n        form.setFieldsValue({d: round(d, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Складна відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Складна Облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface ComplexNominalProps {\r\n    d: number;\r\n    j: number;\r\n    m: number;\r\n}\r\n\r\nexport const ComplexNominalEqForm: FC = () => {\r\n    const [form] = Form.useForm<ComplexNominalProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ComplexNominalProps) => {\r\n        const {m, j} = allValues;\r\n        if(!m || !j) return;\r\n\r\n        const d = (1 - Math.pow((1+j/100/m), -m))*100;\r\n        form.setFieldsValue({d: round(d, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"m\"}\r\n                            label={\"К-сть нарахувань (m)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"j\"}\r\n                            label={\"Номінальна ставка (j) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Складна облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {FC, useCallback} from 'react';\r\nimport {Col, Form, InputNumber, Row} from 'antd';\r\nimport {round} from '../../../utils/helpers';\r\n\r\nexport interface NominalComplexProps {\r\n    d: number;\r\n    j: number;\r\n    m: number;\r\n}\r\n\r\nexport const NominalComplexEqForm: FC = () => {\r\n    const [form] = Form.useForm<NominalComplexProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: NominalComplexProps) => {\r\n        const {m, d}= allValues;\r\n        if(!m || !d) return;\r\n\r\n        const j = (Math.pow((1/(1-d/100)), 1/m) - 1)*m*100;\r\n        form.setFieldsValue({j: round(j, 2)});\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"m\"}\r\n                            label={\"К-сть нарахувань (m)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"d\"}\r\n                            label={\"Складна облікова ставка (d) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"20\"/>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={6}>\r\n                        <Form.Item\r\n                            name={\"j\"}\r\n                            label={\"Номінальна ставка (j) %\"}\r\n                        >\r\n                            <InputNumber disabled/>\r\n                        </Form.Item>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import { FC, useCallback } from 'react';\r\nimport { Checkbox, Col, Form, Input, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ConsolidatedPaymentSizeProps {\r\n    n0: number;\r\n    S: string;\r\n    i: number;\r\n    n: string;\r\n    isComplex: boolean;\r\n    S0: number;\r\n}\r\n\r\nexport const ConsolidatedPaymentSizeForm: FC = () => {\r\n    const [form] = Form.useForm<ConsolidatedPaymentSizeProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ConsolidatedPaymentSizeProps) => {\r\n        let { n0, S, n, isComplex, i } = allValues;\r\n\r\n        i /= 100;\r\n        if (!n0 || !S || !n || !i) return;\r\n\r\n        const SArr = S.split(',').map(x => +x);\r\n        const nArr = n.split(',').map(x => +x);\r\n\r\n        let S0 = 0;\r\n        const SnZipped = SArr.map((e, i) => [e, nArr[i]]);\r\n\r\n        for (let s of SnZipped) {\r\n            if (s[1] < n0) {\r\n                const t = n0 - s[1];\r\n                S0 += s[0] * (isComplex ? Math.pow(1 + i, t / 365) : (1 + i * t / 365))\r\n            }\r\n\r\n            if (s[1] >= n0) {\r\n                const t = s[1] - n0;\r\n                S0 += s[0] * (isComplex ? Math.pow(1 + i, -t / 365) : Math.pow((1 + i * t / 365), -1))\r\n            }\r\n        }\r\n\r\n        form.setFieldsValue({ S0: round(S0, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"S\"}\r\n                            label={\"Платежі розділені комами (S)\"}\r\n                        >\r\n                            <Input placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Терміни платежів у днях розділені комами (n)\"}\r\n                        >\r\n                            <Input placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n0\"}\r\n                            label={\"Термін консолідації у днях\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Ставка (i)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"isComplex\"}\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>Складний відсоток?</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"S0\"}\r\n                            label={\"Консолідований платіж\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, useCallback } from 'react';\r\nimport { Checkbox, Col, Form, Input, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ConsolidatedPaymentTermProps {\r\n    n0: number;\r\n    S: string;\r\n    i: number;\r\n    n: string;\r\n    isComplex: boolean;\r\n    S0: number;\r\n}\r\n\r\nexport const ConsolidatedPaymentTermForm: FC = () => {\r\n    const [form] = Form.useForm<ConsolidatedPaymentTermProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ConsolidatedPaymentTermProps) => {\r\n        let { S0, S, n, isComplex, i } = allValues;\r\n\r\n        i /= 100;\r\n        if (!S0 || !S || !n || !i) return;\r\n\r\n        const SArr = S.split(',').map(x => +x);\r\n        const nArr = n.split(',').map(x => +x);\r\n\r\n        const SnZipped = SArr.map((e, i) => [e, nArr[i]]);\r\n\r\n        let n0 = 0;\r\n\r\n        if (isComplex) {\r\n            let sum = 0;\r\n            for (let s of SnZipped) {\r\n                sum += s[0] * Math.pow(1 + i, -s[1] / 365);\r\n            }\r\n\r\n            n0 = Math.log(S0 / sum) / Math.log(1 + i);\r\n        }\r\n        else {\r\n            let sum = 0;\r\n            for (let s of SnZipped) {\r\n                sum += s[0] * Math.pow((1 + s[1] * i / 365), -1);\r\n            }\r\n\r\n            n0 = (S0 / sum - 1) / i;\r\n        }\r\n\r\n        form.setFieldsValue({ n0: round(n0 * 365, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"S\"}\r\n                            label={\"Платежі розділені комами (S)\"}\r\n                        >\r\n                            <Input placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Терміни платежів у днях розділені комами (n)\"}\r\n                        >\r\n                            <Input placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"S0\"}\r\n                            label={\"Сума консолідованого платежу\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Ставка (i)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"isComplex\"}\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>Складний відсоток?</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n0\"}\r\n                            label={\"Термін консолідованого платежу\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { FC } from \"react\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport {Divider, Tabs, Typography} from 'antd';\r\nimport {\r\n    SimpleAccountingRateEqForm,\r\n    SimpleAccountingRateEqFormDays,\r\n    SimpleRateEqForm,\r\n    SimpleRateEqFormDays\r\n} from './SimpleAndAccountingInterestRatesEquivalence/export';\r\nimport {SimpleComplexEqForm} from './SimpleAndComplexInterestRatesEquivalence/SimpleComplexEqForm';\r\nimport {ComplexSimpleEqForm} from './SimpleAndComplexInterestRatesEquivalence/ComplexSimpleEqForm';\r\nimport {SimpleNominalEqForm} from './SimpleAndNominalRateEquivalence/SimpleNominalEqForm';\r\nimport {NominalSimpleEqForm} from './SimpleAndNominalRateEquivalence/NominalAndSimpleEqForm';\r\nimport {AccountingComplexEqForm} from './SimpleAccountingAndComplexRatesEquivalence/AccountingComplexEq';\r\nimport {AccountingComplexEqDaysForm} from './SimpleAccountingAndComplexRatesEquivalence/AccountingComplexEqDays';\r\nimport {ComplexAccountingEqForm} from './SimpleAccountingAndComplexRatesEquivalence/ComplexAccountingEq';\r\nimport {ComplexAccountingEqDaysForm} from './SimpleAccountingAndComplexRatesEquivalence/ComplexAccountingEqDays';\r\nimport {ComplexAccountingComplexEqForm} from './ComplexAccountingAndComplexRatesEquivalence/ComplexAccountingComplexEq';\r\nimport {ComplexComplexAccountingEqForm} from './ComplexAccountingAndComplexRatesEquivalence/ComplexComplexAccountingEqForm';\r\nimport {ComplexNominalEqForm} from './ComplexAndNominalRatesEquivalence/ComplexNominalEqForm';\r\nimport {NominalComplexEqForm} from './ComplexAndNominalRatesEquivalence/NominalComplexEqFrom';\r\nimport {ConsolidatedPaymentSizeForm} from './Consolidation/ConsolidatedPaymentSize';\r\nimport {ConsolidatedPaymentTermForm} from './Consolidation/ConsolidatedPaymentTerm';\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst Task5: FC = () => {\r\n  return (\r\n    <div>\r\n      <PageHeader\r\n        title=\"Тема 5.\"\r\n        description=\"Еквівалентність відсоткових ставок та змінаг умов фінансових угод\"\r\n      />\r\n      <div className=\"page-content\">\r\n          <Tabs defaultActiveKey=\"1\">\r\n              <TabPane tab=\"5.1 Еквівалентність відсоткових ставок\" key={1}>\r\n                  <Title level={5}>Еквівалентна проста відсоткова ставка</Title>\r\n                  <SimpleRateEqForm/>\r\n                  <Divider/>\r\n                  <SimpleRateEqFormDays/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Еквівалентна проста облікова ставка</Title>\r\n                  <SimpleAccountingRateEqForm/>\r\n                  <Divider/>\r\n                  <SimpleAccountingRateEqFormDays/>\r\n                  <Divider/>\r\n                  <Title level={5}>Еквівалентна проста відсоткова ставка</Title>\r\n                  <SimpleComplexEqForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Еквівалентна складна відсоткова ставка</Title>\r\n                  <ComplexSimpleEqForm/>\r\n                  <Divider/>\r\n                  <Title level={5}>Еквівалентна проста відсоткова ставка</Title>\r\n                  <NominalSimpleEqForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Еквівалентна проста відсоткова ставка</Title>\r\n                  <SimpleNominalEqForm/>\r\n                  <Divider/>\r\n\r\n\r\n                  <Title level={5}>Еквівалентна проста облікова ставка</Title>\r\n                  <AccountingComplexEqForm/>\r\n                  <Divider/>\r\n\r\n                  <AccountingComplexEqDaysForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Еквівалентна складна відсоткова ставка</Title>\r\n                  <ComplexAccountingEqForm/>\r\n                  <Divider/>\r\n\r\n                  <ComplexAccountingEqDaysForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Евівалентна складна облікова ставка</Title>\r\n                  <ComplexAccountingComplexEqForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Евівалентна складна відсоткова ставка</Title>\r\n                  <ComplexComplexAccountingEqForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Евівалентна складна облікова ставка </Title>\r\n                  <ComplexNominalEqForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Евівалентна номінальна ставка</Title>\r\n                  <NominalComplexEqForm/>\r\n                  <Divider/>\r\n              </TabPane>\r\n              <TabPane tab=\"5.2. Фінансова еквівалентність зобов’язань та конверсія платежів. Консолідація виплат\" key={2}>\r\n                  <Title level={5}>Визначення розміру консолідованого платежу</Title>\r\n                  <ConsolidatedPaymentSizeForm/>\r\n                  <Divider/>\r\n\r\n                  <Title level={5}>Визначення терміну консолідованого платежу</Title>\r\n                  <ConsolidatedPaymentTermForm/>\r\n                  <Divider/>\r\n              </TabPane>\r\n          </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task5;\r\n","import { FC, useCallback } from 'react';\r\nimport { Checkbox, Col, Form, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface ContinuousPaymentsProps {\r\n    Y: number;\r\n    D: number;\r\n    g: number;\r\n    I: number;\r\n    n: number;\r\n    isCapitalized: number;\r\n}\r\n\r\nexport const ContinuousPayments: FC = () => {\r\n    const [form] = Form.useForm<ContinuousPaymentsProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: ContinuousPaymentsProps) => {\r\n        const { D, g, I, n, isCapitalized } = allValues;\r\n        if (!D || !g || !I || !n) return;\r\n\r\n        const S = (Math.pow(1 + I / 100, n) - 1) / I * 100;\r\n        const Y = !isCapitalized ? D * g / 100 + D / S : D * Math.pow((1 + g / 100), n) / S;\r\n        form.setFieldsValue({ Y: round(Y, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"isCapitalized\"}\r\n                            valuePropName=\"checked\"\r\n                        >\r\n                            <Checkbox>Капіталізація?</Checkbox>\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"D\"}\r\n                            label={\"Величина заборгованості (D)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"g\"}\r\n                            label={\"Відсоткова ставка за позикою (g) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"I\"}\r\n                            label={\"Проценти за позикою (I) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Термін позики n\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"Y\"}\r\n                            label={\"Термінова виплата (Y)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface NotConstantPaymentsProps {\r\n    Y: number;\r\n    D: number;\r\n    g: number;\r\n    I: number;\r\n    n: number;\r\n    t: number;\r\n    a: number;\r\n}\r\n\r\nexport const NotConstantPayments: FC = () => {\r\n    const [form] = Form.useForm<NotConstantPaymentsProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: NotConstantPaymentsProps) => {\r\n        const { D, g, I, n, t, a } = allValues;\r\n        if (!D || !g || !I || !n || !t || !a) return;\r\n\r\n        const S = (Math.pow(1 + I / 100, n) - 1) / I * 100;\r\n        const R1 = 1 / (S) * (D - a * (Math.pow(1 + I / 100, n) - (1 + n * I / 100)) / (I / 100 * I / 100));\r\n        const Rt = R1 + a * (t - 1);\r\n        const Y = D * g / 100 + Rt;\r\n\r\n        console.log(R1)\r\n        form.setFieldsValue({ Y: round(Y, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"D\"}\r\n                            label={\"Величина заборгованості (D)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"g\"}\r\n                            label={\"Відсоткова ставка за позикою (g) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"I\"}\r\n                            label={\"Проценти за позикою (I) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Термін позики n\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"t\"}\r\n                            label={\"Номер платежа (t)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"a\"}\r\n                            label={\"Різниця прогресії (a)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"Y\"}\r\n                            label={\"Термінова виплата (Y_t)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface NotConstantPaymentsProps {\r\n    Y: number;\r\n    D: number;\r\n    g: number;\r\n    n: number;\r\n    t: number;\r\n    Dt_1: number;\r\n}\r\n\r\nexport const AmortizationEqual: FC = () => {\r\n    const [form] = Form.useForm<NotConstantPaymentsProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: NotConstantPaymentsProps) => {\r\n        let { D, g, n, t } = allValues;\r\n        if (!D || !g || !n || !t) return;\r\n\r\n        let Dt_1 = D;\r\n        t--;\r\n        while (t > 0) {\r\n            Dt_1 = Dt_1 * (n - 1) / n;\r\n            t--;\r\n        }\r\n\r\n        const Yt = Dt_1 * g / 100 + D / n;\r\n        form.setFieldsValue({ Y: round(Yt, 2), Dt_1: round(Dt_1, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"D\"}\r\n                            label={\"Величина заборгованості (D)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"g\"}\r\n                            label={\"Відсоткова ставка за позикою (g) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Термін позики n\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"t\"}\r\n                            label={\"Номер платежа (t)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"Y\"}\r\n                            label={\"Термінова виплата (Y_t)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"Dt_1\"}\r\n                            label={\"Залишок боргу (Dt-1)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface AllEqualProps {\r\n    Y: number;\r\n    D: number;\r\n    g: number;\r\n    n: number;\r\n}\r\n\r\nexport const AllEqual: FC = () => {\r\n    const [form] = Form.useForm<AllEqualProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: AllEqualProps) => {\r\n        let { D, g, n, } = allValues;\r\n        if (!D || !g || !n) return;\r\n\r\n        const a = (1 - Math.pow((1 + g / 100), -n)) / (g / 100)\r\n        const Y = D / a;\r\n\r\n        form.setFieldsValue({ Y: round(Y, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"D\"}\r\n                            label={\"Величина заборгованості (D)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"g\"}\r\n                            label={\"Відсоткова ставка за позикою (g) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Термін позики n\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"Y\"}\r\n                            label={\"Термінова виплата (Y)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface GrantElementFormProps {\r\n    n: number;\r\n    g: number;\r\n    i: number;\r\n    D: number;\r\n    W: number;\r\n    w: number;\r\n    L: number;\r\n    v: number;\r\n}\r\n\r\nexport const GrantElementForm: FC = () => {\r\n    const [form] = Form.useForm<GrantElementFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: GrantElementFormProps) => {\r\n        let { n, g, i, D, v, L } = allValues;\r\n\r\n        v = v || 1;\r\n        L = L || 0;\r\n\r\n        if (!n || !g || !i || !D) return;\r\n\r\n        const a = (n: number, i: number) => (1 - Math.pow((1 + i / 100), -n)) / (i / 100);\r\n\r\n        const w = 1 - (a(n - L, i) / a(n - L, g) * Math.pow(v, L) + g / 100 * a(L, i));\r\n        const W = D * w;\r\n\r\n        form.setFieldsValue({ W: round(W, 2), w: round(w, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"D\"}\r\n                            label={\"Величина заборгованості (D)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"g\"}\r\n                            label={\"Пільгова відсоткова ставка (g) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Ринкова відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Термін позики n\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"L\"}\r\n                            label={\"Пільговий період (L)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"v\"}\r\n                            label={\"Дисконтний множник (v)\"}\r\n                        >\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"W\"}\r\n                            label={\"Абсолютний грант-елемент (W)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"w\"}\r\n                            label={\"Відносний грант-елемент (w)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface OneMorePrivilegeFormProps {\r\n    n: number;\r\n    g: number;\r\n    i: number;\r\n    D: number;\r\n    W: number;\r\n    w: number;\r\n    L: number;\r\n}\r\n\r\nexport const OneMorePrivilegeForm: FC = () => {\r\n    const [form] = Form.useForm<OneMorePrivilegeFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: OneMorePrivilegeFormProps) => {\r\n        let { n, g, i, D, L } = allValues;\r\n\r\n        if (!n || !g || !i || !D || !L) return;\r\n\r\n        const a = (n: number, i: number) => (1 - Math.pow((1 + i / 100), -n)) / (i / 100);\r\n\r\n        const w = 1 - (a(n - L, i) / a(n - L, g)) * Math.pow((1 + g / 100) / (1 + i / 100), L);\r\n        const W = D * w;\r\n\r\n        form.setFieldsValue({ W: round(W, 2), w: round(w, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"D\"}\r\n                            label={\"Величина заборгованості (D)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"g\"}\r\n                            label={\"Пільгова відсоткова ставка (g) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"i\"}\r\n                            label={\"Ринкова відсоткова ставка (i) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Термін позики n\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"L\"}\r\n                            label={\"Пільговий період (L)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"W\"}\r\n                            label={\"Абсолютний грант-елемент (W)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"w\"}\r\n                            label={\"Відносний грант-елемент (w)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import { FC, useCallback } from 'react';\r\nimport { Col, Form, InputNumber, Row } from 'antd';\r\nimport { round } from '../../../utils/helpers';\r\n\r\nexport interface MortgageFormProps {\r\n    n: number;\r\n    g: number;\r\n    D: number;\r\n    Y: number;\r\n    m: number;\r\n    t: number;\r\n    S: number;\r\n}\r\n\r\nexport const MortgageForm: FC = () => {\r\n    const [form] = Form.useForm<MortgageFormProps>();\r\n\r\n    const handleChanges = useCallback((_, allValues: MortgageFormProps) => {\r\n        let { D, g, m, n, t } = allValues;\r\n\r\n        if (!D || !g || !m || !n || !t) return;\r\n\r\n        g /= 100;\r\n\r\n        const k = 1 + g / m;\r\n        const Y = D * g / m * Math.pow(k, m * n) / (Math.pow(k, m * n) - 1);\r\n        const S = D * (Math.pow(k, m * n) - Math.pow(k, t - 1)) / (Math.pow(k, m * n) - 1);\r\n\r\n        form.setFieldsValue({ Y: round(Y, 2), S: round(S, 2) });\r\n    }, [form]);\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                name=\"task2\"\r\n                form={form}\r\n                onValuesChange={handleChanges}\r\n                layout=\"vertical\"\r\n                className={\"form-content\"}\r\n            >\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"D\"}\r\n                            label={\"Величина заборгованості (D)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"g\"}\r\n                            label={\"Відсоткова ставка (g) %\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"n\"}\r\n                            label={\"Термін позики n\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"m\"}\r\n                            label={\"Кількість нарахувань у році (m)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"t\"}\r\n                            label={\"Номер періоду нарахувань (t)\"}\r\n                        >\r\n                            <InputNumber placeholder=\"5\" />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <Row\r\n                    justify=\"start\"\r\n                    align=\"bottom\"\r\n                    gutter={[16, 0]}\r\n                    className={\"row-without-margin\"}\r\n                >\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"Y\"}\r\n                            label={\"Величина щомісячної виплати (Y)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={5}>\r\n                        <Form.Item\r\n                            name={\"S\"}\r\n                            label={\"Сума боргу в період t (S)\"}\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { FC } from \"react\";\r\nimport PageHeader from \"../../components/PageHeader/PageHeader\";\r\nimport {Divider, Tabs, Typography} from 'antd';\r\nimport {ContinuousPayments} from './FundCreation/ContinuousPayments';\r\nimport {NotConstantPayments} from './FundCreation/NotConstantPayments';\r\nimport {AmortizationEqual} from './Amortization/AmortizationEqual';\r\nimport {AllEqual} from './Amortization/AllEqual';\r\nimport {GrantElementForm} from './Privileges/GrantElementForm';\r\nimport {OneMorePrivilegeForm} from './Privileges/OneMorePrivilege';\r\nimport {MortgageForm} from './Privileges/Mortgage';\r\n\r\n\r\nconst { Title } = Typography;\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nconst Task7: FC = () => {\r\n    return (\r\n        <div>\r\n            <PageHeader\r\n                title=\"Тема 7.\"\r\n                description=\"Планування погашення заборгованості\"\r\n            />\r\n            <div className=\"page-content\">\r\n                <Tabs defaultActiveKey=\"1\">\r\n                    <TabPane tab=\"7.1 Створення фонду погашення заборгованості\" key={1}>\r\n                        <Title level={5}>Постійні внески у фонд</Title>\r\n                        <ContinuousPayments/>\r\n                        <Divider/>\r\n\r\n                        <Title level={5}>Змінні внески у фонд</Title>\r\n                        <NotConstantPayments/>\r\n                        <Divider/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"7.2 Амортизація заборгованості\" key={2}>\r\n                        <Title level={5}>Погашення основного боргу рівними терміновими випалатами</Title>\r\n                        <AmortizationEqual/>\r\n                        <Divider/>\r\n\r\n                        <Title level={5}>Погашення всього боргу рівними терміновими випалатами</Title>\r\n                        <AllEqual/>\r\n                        <Divider/>\r\n                    </TabPane>\r\n                    <TabPane tab=\"7.3 Пільгові позики та кредити\" key={3}>\r\n                        <Title level={5}>Грант-елемент</Title>\r\n                        <GrantElementForm/>\r\n                        <Divider/>\r\n\r\n                        <Title level={5}>Нарахування відсотків до основного боргу</Title>\r\n                        <OneMorePrivilegeForm/>\r\n                        <Divider/>\r\n\r\n                        <Title level={5}>Іпотека</Title>\r\n                        <MortgageForm/>\r\n                        <Divider/>\r\n                    </TabPane>\r\n                </Tabs>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Task7;\r\n","import React, { FC } from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst Navigation: FC = () => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Sider trigger={null} collapsible>\r\n      <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[location.pathname]}>\r\n        <Menu.Item key=\"/\">\r\n          <Link to=\"/\">Головна</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/task/1\">\r\n          <Link to=\"/task/1\">Тема 1.</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/task/2\">\r\n          <Link to=\"/task/2\">Тема 2.</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/task/3\">\r\n          <Link to=\"/task/3\">Тема 3.</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/task/4\">\r\n          <Link to=\"/task/4\">Тема 4.</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/task/5\">\r\n          <Link to=\"/task/5\">Тема 5.</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"/task/7\">\r\n          <Link to=\"/task/7\">Тема 7.</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n\r\n      <div className=\"copyright\">YaZOKP ©2021</div>\r\n    </Sider>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { FC } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport Home from \"./Home/Home\";\r\nimport Task1 from \"./Task1/Task1\";\r\nimport Task2 from \"./Task2/Task2\";\r\nimport Task3 from \"./Task3/Task3\";\r\nimport Task4 from \"./Task4/Task4\";\r\nimport Task5 from \"./Task5/Task5\";\r\nimport Task7 from \"./Task7/Task7\";\r\nimport Navigation from \"../components/Navigation/Navigation\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst App: FC = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Layout className=\"main-layout\">\r\n          <Navigation />\r\n          <Layout className=\"content-layout\">\r\n            <Content>\r\n              <Route exact path=\"/\" component={Home} />\r\n              <Route path=\"/task/1\" component={Task1} />\r\n              <Route path=\"/task/2\" component={Task2} />\r\n              <Route path=\"/task/3\" component={Task3} />\r\n              <Route path=\"/task/4\" component={Task4} />\r\n              <Route path=\"/task/5\" component={Task5} />\r\n              <Route path=\"/task/7\" component={Task7} />\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './modules/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}